Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    UNIFORM
    COLON
    FOR

Grammar

Rule 0     S' -> module
Rule 1     module -> module_element_list
Rule 2     module_element_list -> <empty>
Rule 3     module_element_list -> module_element_list module_element
Rule 4     module_element -> function_declaration
Rule 5     module_element -> function_definition
Rule 6     module_element -> struct_definition
Rule 7     function_kind -> <empty>
Rule 8     function_kind -> KERNEL LPAREN IDENTIFIER RPAREN
Rule 9     prototype_arguments -> prototype_arguments_empty
Rule 10    prototype_arguments -> prototype_arguments_nonempty
Rule 11    prototype_arguments_empty -> <empty>
Rule 12    prototype_arguments_nonempty -> prototype_argument
Rule 13    prototype_arguments_nonempty -> prototype_arguments_nonempty COMMA prototype_argument
Rule 14    prototype_argument -> argument_pass_type type_expr IDENTIFIER
Rule 15    argument_pass_type -> <empty>
Rule 16    argument_pass_type -> IN
Rule 17    argument_pass_type -> OUT
Rule 18    argument_pass_type -> INOUT
Rule 19    function_prototype -> function_kind type_expr IDENTIFIER LPAREN prototype_arguments RPAREN
Rule 20    function_declaration -> function_prototype SEMICOLON
Rule 21    function_definition -> function_prototype LCBRACKET statement_list RCBRACKET
Rule 22    statement_list -> <empty>
Rule 23    statement_list -> statement_list statement
Rule 24    statement -> null_statement
Rule 25    statement -> block_statement
Rule 26    statement -> if_statement
Rule 27    statement -> while_statement
Rule 28    statement -> do_while_statement
Rule 29    statement -> break_statement
Rule 30    statement -> continue_statement
Rule 31    statement -> discard_statement
Rule 32    statement -> return_statement
Rule 33    statement -> variables_declaration
Rule 34    statement -> expression_statement
Rule 35    variables_declaration -> type_expr variables_names SEMICOLON
Rule 36    variables_names -> variable_name
Rule 37    variables_names -> variables_names COMMA variable_name
Rule 38    variable_name -> IDENTIFIER
Rule 39    variable_name -> IDENTIFIER ASSIGN expression
Rule 40    null_statement -> SEMICOLON
Rule 41    block_statement -> LCBRACKET statement_list RCBRACKET
Rule 42    if_statement -> IF LPAREN expression RPAREN statement
Rule 43    if_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 44    while_statement -> WHILE LPAREN expression RPAREN statement
Rule 45    do_while_statement -> DO statement WHILE LPAREN expression RPAREN
Rule 46    break_statement -> BREAK SEMICOLON
Rule 47    continue_statement -> CONTINUE SEMICOLON
Rule 48    discard_statement -> DISCARD SEMICOLON
Rule 49    return_statement -> RETURN SEMICOLON
Rule 50    return_statement -> RETURN expression SEMICOLON
Rule 51    expression_statement -> expression SEMICOLON
Rule 52    expression -> primary_expression
Rule 53    expression -> expression PLUS expression
Rule 54    expression -> expression MINUS expression
Rule 55    expression -> expression MULTIPLY expression
Rule 56    expression -> expression DIVIDE expression
Rule 57    expression -> expression REMAINDER expression
Rule 58    expression -> expression LT expression
Rule 59    expression -> expression LE expression
Rule 60    expression -> expression EQ expression
Rule 61    expression -> expression NE expression
Rule 62    expression -> expression GT expression
Rule 63    expression -> expression GE expression
Rule 64    expression -> expression LAND expression
Rule 65    expression -> expression LOR expression
Rule 66    expression -> expression BITAND expression
Rule 67    expression -> expression BITOR expression
Rule 68    expression -> expression BITXOR expression
Rule 69    expression -> expression SHIFTLEFT expression
Rule 70    expression -> expression SHIFTRIGHT expression
Rule 71    expression -> expression ASSIGN expression
Rule 72    expression -> expression ASSIGN_PLUS expression
Rule 73    expression -> expression ASSIGN_MINUS expression
Rule 74    expression -> expression ASSIGN_MULTIPLY expression
Rule 75    expression -> expression ASSIGN_DIVIDE expression
Rule 76    expression -> expression ASSIGN_REMAINDER expression
Rule 77    expression -> expression ASSIGN_BITOR expression
Rule 78    expression -> expression ASSIGN_BITAND expression
Rule 79    expression -> expression ASSIGN_BITXOR expression
Rule 80    expression -> expression ASSIGN_SHIFTLEFT expression
Rule 81    expression -> expression ASSIGN_SHIFTRIGHT expression
Rule 82    expression -> PLUS expression
Rule 83    expression -> MINUS expression
Rule 84    expression -> LNOT expression
Rule 85    expression -> BITNOT expression
Rule 86    primary_expression -> constant
Rule 87    primary_expression -> identifier
Rule 88    primary_expression -> parenthesis_expression
Rule 89    primary_expression -> member_access
Rule 90    primary_expression -> subscript_access
Rule 91    primary_expression -> call_expression
Rule 92    parenthesis_expression -> LPAREN expression RPAREN
Rule 93    member_access -> primary_expression DOT IDENTIFIER
Rule 94    subscript_access -> primary_expression LBRACKET expression RBRACKET
Rule 95    call_expression -> primary_expression LPAREN call_arguments RPAREN
Rule 96    call_arguments -> call_arguments_empty
Rule 97    call_arguments -> call_arguments_nonempty
Rule 98    call_arguments_empty -> <empty>
Rule 99    call_arguments_nonempty -> expression
Rule 100   call_arguments_nonempty -> call_arguments_nonempty COMMA expression
Rule 101   constant -> integer_constant
Rule 102   constant -> boolean_constant
Rule 103   constant -> real_constant
Rule 104   constant -> string_literal
Rule 105   integer_constant -> INTEGER
Rule 106   boolean_constant -> TRUE
Rule 107   boolean_constant -> FALSE
Rule 108   real_constant -> REAL
Rule 109   string_literal -> STRING
Rule 110   type_expr -> type
Rule 111   type_expr -> identifier
Rule 112   type -> TYPE
Rule 113   identifier -> IDENTIFIER
Rule 114   struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON
Rule 115   struct_fields -> struct_fields struct_field
Rule 116   struct_fields -> <empty>
Rule 117   struct_field -> optional_attribute_list type IDENTIFIER SEMICOLON
Rule 118   optional_attribute_list -> <empty>
Rule 119   optional_attribute_list -> optional_attribute_list attribute
Rule 120   attribute -> LBRACKET IDENTIFIER attribute_arguments RBRACKET
Rule 121   attribute_arguments -> <empty>
Rule 122   attribute_arguments -> LPAREN call_arguments RPAREN

Terminals, with rules where they appear

ASSIGN               : 39 71
ASSIGN_BITAND        : 78
ASSIGN_BITOR         : 77
ASSIGN_BITXOR        : 79
ASSIGN_DIVIDE        : 75
ASSIGN_MINUS         : 73
ASSIGN_MULTIPLY      : 74
ASSIGN_PLUS          : 72
ASSIGN_REMAINDER     : 76
ASSIGN_SHIFTLEFT     : 80
ASSIGN_SHIFTRIGHT    : 81
BITAND               : 66
BITNOT               : 85
BITOR                : 67
BITXOR               : 68
BREAK                : 46
COLON                : 
COMMA                : 13 37 100
CONTINUE             : 47
DISCARD              : 48
DIVIDE               : 56
DO                   : 45
DOT                  : 93
ELSE                 : 43
EQ                   : 60
FALSE                : 107
FOR                  : 
GE                   : 63
GT                   : 62
IDENTIFIER           : 8 14 19 38 39 93 113 114 117 120
IF                   : 42 43
IN                   : 16
INOUT                : 18
INTEGER              : 105
KERNEL               : 8
LAND                 : 64
LBRACKET             : 94 120
LCBRACKET            : 21 41 114
LE                   : 59
LNOT                 : 84
LOR                  : 65
LPAREN               : 8 19 42 43 44 45 92 95 122
LT                   : 58
MINUS                : 54 83
MULTIPLY             : 55
NE                   : 61
OUT                  : 17
PLUS                 : 53 82
RBRACKET             : 94 120
RCBRACKET            : 21 41 114
REAL                 : 108
REMAINDER            : 57
RETURN               : 49 50
RPAREN               : 8 19 42 43 44 45 92 95 122
SEMICOLON            : 20 35 40 46 47 48 49 50 51 114 117
SHIFTLEFT            : 69
SHIFTRIGHT           : 70
STRING               : 109
STRUCT               : 114
TRUE                 : 106
TYPE                 : 112
UNIFORM              : 
WHILE                : 44 45
error                : 

Nonterminals, with rules where they appear

argument_pass_type   : 14
attribute            : 119
attribute_arguments  : 120
block_statement      : 25
boolean_constant     : 102
break_statement      : 29
call_arguments       : 95 122
call_arguments_empty : 96
call_arguments_nonempty : 97 100
call_expression      : 91
constant             : 86
continue_statement   : 30
discard_statement    : 31
do_while_statement   : 28
expression           : 39 42 43 44 45 50 51 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 83 84 85 92 94 99 100
expression_statement : 34
function_declaration : 4
function_definition  : 5
function_kind        : 19
function_prototype   : 20 21
identifier           : 87 111
if_statement         : 26
integer_constant     : 101
member_access        : 89
module               : 0
module_element       : 3
module_element_list  : 1 3
null_statement       : 24
optional_attribute_list : 114 117 119
parenthesis_expression : 88
primary_expression   : 52 93 94 95
prototype_argument   : 12 13
prototype_arguments  : 19
prototype_arguments_empty : 9
prototype_arguments_nonempty : 10 13
real_constant        : 103
return_statement     : 32
statement            : 23 42 43 43 44 45
statement_list       : 21 23 41
string_literal       : 104
struct_definition    : 6
struct_field         : 115
struct_fields        : 114 115
subscript_access     : 90
type                 : 110 117
type_expr            : 14 19 35
variable_name        : 36 37
variables_declaration : 33
variables_names      : 35 37
while_statement      : 27

Parsing method: LALR

state 0

    (0) S' -> . module
    (1) module -> . module_element_list
    (2) module_element_list -> .
    (3) module_element_list -> . module_element_list module_element

    KERNEL          reduce using rule 2 (module_element_list -> .)
    STRUCT          reduce using rule 2 (module_element_list -> .)
    LBRACKET        reduce using rule 2 (module_element_list -> .)
    TYPE            reduce using rule 2 (module_element_list -> .)
    IDENTIFIER      reduce using rule 2 (module_element_list -> .)
    $end            reduce using rule 2 (module_element_list -> .)

    module_element_list            shift and go to state 1
    module                         shift and go to state 2

state 1

    (1) module -> module_element_list .
    (3) module_element_list -> module_element_list . module_element
    (4) module_element -> . function_declaration
    (5) module_element -> . function_definition
    (6) module_element -> . struct_definition
    (20) function_declaration -> . function_prototype SEMICOLON
    (21) function_definition -> . function_prototype LCBRACKET statement_list RCBRACKET
    (114) struct_definition -> . optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON
    (19) function_prototype -> . function_kind type_expr IDENTIFIER LPAREN prototype_arguments RPAREN
    (118) optional_attribute_list -> .
    (119) optional_attribute_list -> . optional_attribute_list attribute
    (7) function_kind -> .
    (8) function_kind -> . KERNEL LPAREN IDENTIFIER RPAREN

    $end            reduce using rule 1 (module -> module_element_list .)
    STRUCT          reduce using rule 118 (optional_attribute_list -> .)
    LBRACKET        reduce using rule 118 (optional_attribute_list -> .)
    TYPE            reduce using rule 7 (function_kind -> .)
    IDENTIFIER      reduce using rule 7 (function_kind -> .)
    KERNEL          shift and go to state 10

    struct_definition              shift and go to state 3
    function_prototype             shift and go to state 4
    module_element                 shift and go to state 5
    function_declaration           shift and go to state 6
    optional_attribute_list        shift and go to state 7
    function_kind                  shift and go to state 8
    function_definition            shift and go to state 9

state 2

    (0) S' -> module .



state 3

    (6) module_element -> struct_definition .

    KERNEL          reduce using rule 6 (module_element -> struct_definition .)
    STRUCT          reduce using rule 6 (module_element -> struct_definition .)
    LBRACKET        reduce using rule 6 (module_element -> struct_definition .)
    TYPE            reduce using rule 6 (module_element -> struct_definition .)
    IDENTIFIER      reduce using rule 6 (module_element -> struct_definition .)
    $end            reduce using rule 6 (module_element -> struct_definition .)


state 4

    (20) function_declaration -> function_prototype . SEMICOLON
    (21) function_definition -> function_prototype . LCBRACKET statement_list RCBRACKET

    SEMICOLON       shift and go to state 12
    LCBRACKET       shift and go to state 11


state 5

    (3) module_element_list -> module_element_list module_element .

    KERNEL          reduce using rule 3 (module_element_list -> module_element_list module_element .)
    STRUCT          reduce using rule 3 (module_element_list -> module_element_list module_element .)
    LBRACKET        reduce using rule 3 (module_element_list -> module_element_list module_element .)
    TYPE            reduce using rule 3 (module_element_list -> module_element_list module_element .)
    IDENTIFIER      reduce using rule 3 (module_element_list -> module_element_list module_element .)
    $end            reduce using rule 3 (module_element_list -> module_element_list module_element .)


state 6

    (4) module_element -> function_declaration .

    KERNEL          reduce using rule 4 (module_element -> function_declaration .)
    STRUCT          reduce using rule 4 (module_element -> function_declaration .)
    LBRACKET        reduce using rule 4 (module_element -> function_declaration .)
    TYPE            reduce using rule 4 (module_element -> function_declaration .)
    IDENTIFIER      reduce using rule 4 (module_element -> function_declaration .)
    $end            reduce using rule 4 (module_element -> function_declaration .)


state 7

    (114) struct_definition -> optional_attribute_list . STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON
    (119) optional_attribute_list -> optional_attribute_list . attribute
    (120) attribute -> . LBRACKET IDENTIFIER attribute_arguments RBRACKET

    STRUCT          shift and go to state 13
    LBRACKET        shift and go to state 15

    attribute                      shift and go to state 14

state 8

    (19) function_prototype -> function_kind . type_expr IDENTIFIER LPAREN prototype_arguments RPAREN
    (110) type_expr -> . type
    (111) type_expr -> . identifier
    (112) type -> . TYPE
    (113) identifier -> . IDENTIFIER

    TYPE            shift and go to state 17
    IDENTIFIER      shift and go to state 19

    type                           shift and go to state 20
    type_expr                      shift and go to state 18
    identifier                     shift and go to state 16

state 9

    (5) module_element -> function_definition .

    KERNEL          reduce using rule 5 (module_element -> function_definition .)
    STRUCT          reduce using rule 5 (module_element -> function_definition .)
    LBRACKET        reduce using rule 5 (module_element -> function_definition .)
    TYPE            reduce using rule 5 (module_element -> function_definition .)
    IDENTIFIER      reduce using rule 5 (module_element -> function_definition .)
    $end            reduce using rule 5 (module_element -> function_definition .)


state 10

    (8) function_kind -> KERNEL . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 21


state 11

    (21) function_definition -> function_prototype LCBRACKET . statement_list RCBRACKET
    (22) statement_list -> .
    (23) statement_list -> . statement_list statement

    RCBRACKET       reduce using rule 22 (statement_list -> .)
    SEMICOLON       reduce using rule 22 (statement_list -> .)
    LCBRACKET       reduce using rule 22 (statement_list -> .)
    IF              reduce using rule 22 (statement_list -> .)
    WHILE           reduce using rule 22 (statement_list -> .)
    DO              reduce using rule 22 (statement_list -> .)
    BREAK           reduce using rule 22 (statement_list -> .)
    CONTINUE        reduce using rule 22 (statement_list -> .)
    DISCARD         reduce using rule 22 (statement_list -> .)
    RETURN          reduce using rule 22 (statement_list -> .)
    PLUS            reduce using rule 22 (statement_list -> .)
    MINUS           reduce using rule 22 (statement_list -> .)
    LNOT            reduce using rule 22 (statement_list -> .)
    BITNOT          reduce using rule 22 (statement_list -> .)
    TYPE            reduce using rule 22 (statement_list -> .)
    IDENTIFIER      reduce using rule 22 (statement_list -> .)
    LPAREN          reduce using rule 22 (statement_list -> .)
    INTEGER         reduce using rule 22 (statement_list -> .)
    TRUE            reduce using rule 22 (statement_list -> .)
    FALSE           reduce using rule 22 (statement_list -> .)
    REAL            reduce using rule 22 (statement_list -> .)
    STRING          reduce using rule 22 (statement_list -> .)

    statement_list                 shift and go to state 22

state 12

    (20) function_declaration -> function_prototype SEMICOLON .

    KERNEL          reduce using rule 20 (function_declaration -> function_prototype SEMICOLON .)
    STRUCT          reduce using rule 20 (function_declaration -> function_prototype SEMICOLON .)
    LBRACKET        reduce using rule 20 (function_declaration -> function_prototype SEMICOLON .)
    TYPE            reduce using rule 20 (function_declaration -> function_prototype SEMICOLON .)
    IDENTIFIER      reduce using rule 20 (function_declaration -> function_prototype SEMICOLON .)
    $end            reduce using rule 20 (function_declaration -> function_prototype SEMICOLON .)


state 13

    (114) struct_definition -> optional_attribute_list STRUCT . IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 23


state 14

    (119) optional_attribute_list -> optional_attribute_list attribute .

    STRUCT          reduce using rule 119 (optional_attribute_list -> optional_attribute_list attribute .)
    LBRACKET        reduce using rule 119 (optional_attribute_list -> optional_attribute_list attribute .)
    TYPE            reduce using rule 119 (optional_attribute_list -> optional_attribute_list attribute .)


state 15

    (120) attribute -> LBRACKET . IDENTIFIER attribute_arguments RBRACKET

    IDENTIFIER      shift and go to state 24


state 16

    (111) type_expr -> identifier .

    IDENTIFIER      reduce using rule 111 (type_expr -> identifier .)


state 17

    (112) type -> TYPE .

    IDENTIFIER      reduce using rule 112 (type -> TYPE .)


state 18

    (19) function_prototype -> function_kind type_expr . IDENTIFIER LPAREN prototype_arguments RPAREN

    IDENTIFIER      shift and go to state 25


state 19

    (113) identifier -> IDENTIFIER .

    DOT             reduce using rule 113 (identifier -> IDENTIFIER .)
    LBRACKET        reduce using rule 113 (identifier -> IDENTIFIER .)
    LPAREN          reduce using rule 113 (identifier -> IDENTIFIER .)
    PLUS            reduce using rule 113 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 113 (identifier -> IDENTIFIER .)
    MULTIPLY        reduce using rule 113 (identifier -> IDENTIFIER .)
    DIVIDE          reduce using rule 113 (identifier -> IDENTIFIER .)
    REMAINDER       reduce using rule 113 (identifier -> IDENTIFIER .)
    LT              reduce using rule 113 (identifier -> IDENTIFIER .)
    LE              reduce using rule 113 (identifier -> IDENTIFIER .)
    EQ              reduce using rule 113 (identifier -> IDENTIFIER .)
    NE              reduce using rule 113 (identifier -> IDENTIFIER .)
    GT              reduce using rule 113 (identifier -> IDENTIFIER .)
    GE              reduce using rule 113 (identifier -> IDENTIFIER .)
    LAND            reduce using rule 113 (identifier -> IDENTIFIER .)
    LOR             reduce using rule 113 (identifier -> IDENTIFIER .)
    BITAND          reduce using rule 113 (identifier -> IDENTIFIER .)
    BITOR           reduce using rule 113 (identifier -> IDENTIFIER .)
    BITXOR          reduce using rule 113 (identifier -> IDENTIFIER .)
    SHIFTLEFT       reduce using rule 113 (identifier -> IDENTIFIER .)
    SHIFTRIGHT      reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN          reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN_PLUS     reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN_MINUS    reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN_MULTIPLY reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN_DIVIDE   reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN_REMAINDER reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN_BITOR    reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN_BITAND   reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN_BITXOR   reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN_SHIFTLEFT reduce using rule 113 (identifier -> IDENTIFIER .)
    ASSIGN_SHIFTRIGHT reduce using rule 113 (identifier -> IDENTIFIER .)
    SEMICOLON       reduce using rule 113 (identifier -> IDENTIFIER .)
    RPAREN          reduce using rule 113 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 113 (identifier -> IDENTIFIER .)
    RBRACKET        reduce using rule 113 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 113 (identifier -> IDENTIFIER .)


state 20

    (110) type_expr -> type .

    IDENTIFIER      reduce using rule 110 (type_expr -> type .)


state 21

    (8) function_kind -> KERNEL LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 26


state 22

    (21) function_definition -> function_prototype LCBRACKET statement_list . RCBRACKET
    (23) statement_list -> statement_list . statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . if_statement
    (27) statement -> . while_statement
    (28) statement -> . do_while_statement
    (29) statement -> . break_statement
    (30) statement -> . continue_statement
    (31) statement -> . discard_statement
    (32) statement -> . return_statement
    (33) statement -> . variables_declaration
    (34) statement -> . expression_statement
    (40) null_statement -> . SEMICOLON
    (41) block_statement -> . LCBRACKET statement_list RCBRACKET
    (42) if_statement -> . IF LPAREN expression RPAREN statement
    (43) if_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (44) while_statement -> . WHILE LPAREN expression RPAREN statement
    (45) do_while_statement -> . DO statement WHILE LPAREN expression RPAREN
    (46) break_statement -> . BREAK SEMICOLON
    (47) continue_statement -> . CONTINUE SEMICOLON
    (48) discard_statement -> . DISCARD SEMICOLON
    (49) return_statement -> . RETURN SEMICOLON
    (50) return_statement -> . RETURN expression SEMICOLON
    (35) variables_declaration -> . type_expr variables_names SEMICOLON
    (51) expression_statement -> . expression SEMICOLON
    (110) type_expr -> . type
    (111) type_expr -> . identifier
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (112) type -> . TYPE
    (113) identifier -> . IDENTIFIER
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    RCBRACKET       shift and go to state 38
    SEMICOLON       shift and go to state 39
    LCBRACKET       shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 33
    DO              shift and go to state 28
    BREAK           shift and go to state 61
    CONTINUE        shift and go to state 63
    DISCARD         shift and go to state 34
    RETURN          shift and go to state 30
    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    TYPE            shift and go to state 17
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    expression_statement           shift and go to state 27
    constant                       shift and go to state 49
    integer_constant               shift and go to state 31
    break_statement                shift and go to state 32
    string_literal                 shift and go to state 35
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    block_statement                shift and go to state 41
    return_statement               shift and go to state 42
    while_statement                shift and go to state 43
    continue_statement             shift and go to state 44
    statement                      shift and go to state 46
    boolean_constant               shift and go to state 47
    if_statement                   shift and go to state 50
    type                           shift and go to state 20
    do_while_statement             shift and go to state 52
    variables_declaration          shift and go to state 58
    primary_expression             shift and go to state 53
    null_statement                 shift and go to state 67
    subscript_access               shift and go to state 60
    type_expr                      shift and go to state 71
    real_constant                  shift and go to state 65
    identifier                     shift and go to state 51
    expression                     shift and go to state 68
    discard_statement              shift and go to state 69
    call_expression                shift and go to state 70

state 23

    (114) struct_definition -> optional_attribute_list STRUCT IDENTIFIER . LCBRACKET struct_fields RCBRACKET SEMICOLON

    LCBRACKET       shift and go to state 72


state 24

    (120) attribute -> LBRACKET IDENTIFIER . attribute_arguments RBRACKET
    (121) attribute_arguments -> .
    (122) attribute_arguments -> . LPAREN call_arguments RPAREN

    RBRACKET        reduce using rule 121 (attribute_arguments -> .)
    LPAREN          shift and go to state 74

    attribute_arguments            shift and go to state 73

state 25

    (19) function_prototype -> function_kind type_expr IDENTIFIER . LPAREN prototype_arguments RPAREN

    LPAREN          shift and go to state 75


state 26

    (8) function_kind -> KERNEL LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 76


state 27

    (34) statement -> expression_statement .

    RCBRACKET       reduce using rule 34 (statement -> expression_statement .)
    SEMICOLON       reduce using rule 34 (statement -> expression_statement .)
    LCBRACKET       reduce using rule 34 (statement -> expression_statement .)
    IF              reduce using rule 34 (statement -> expression_statement .)
    WHILE           reduce using rule 34 (statement -> expression_statement .)
    DO              reduce using rule 34 (statement -> expression_statement .)
    BREAK           reduce using rule 34 (statement -> expression_statement .)
    CONTINUE        reduce using rule 34 (statement -> expression_statement .)
    DISCARD         reduce using rule 34 (statement -> expression_statement .)
    RETURN          reduce using rule 34 (statement -> expression_statement .)
    PLUS            reduce using rule 34 (statement -> expression_statement .)
    MINUS           reduce using rule 34 (statement -> expression_statement .)
    LNOT            reduce using rule 34 (statement -> expression_statement .)
    BITNOT          reduce using rule 34 (statement -> expression_statement .)
    TYPE            reduce using rule 34 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 34 (statement -> expression_statement .)
    LPAREN          reduce using rule 34 (statement -> expression_statement .)
    INTEGER         reduce using rule 34 (statement -> expression_statement .)
    TRUE            reduce using rule 34 (statement -> expression_statement .)
    FALSE           reduce using rule 34 (statement -> expression_statement .)
    REAL            reduce using rule 34 (statement -> expression_statement .)
    STRING          reduce using rule 34 (statement -> expression_statement .)
    ELSE            reduce using rule 34 (statement -> expression_statement .)


state 28

    (45) do_while_statement -> DO . statement WHILE LPAREN expression RPAREN
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . if_statement
    (27) statement -> . while_statement
    (28) statement -> . do_while_statement
    (29) statement -> . break_statement
    (30) statement -> . continue_statement
    (31) statement -> . discard_statement
    (32) statement -> . return_statement
    (33) statement -> . variables_declaration
    (34) statement -> . expression_statement
    (40) null_statement -> . SEMICOLON
    (41) block_statement -> . LCBRACKET statement_list RCBRACKET
    (42) if_statement -> . IF LPAREN expression RPAREN statement
    (43) if_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (44) while_statement -> . WHILE LPAREN expression RPAREN statement
    (45) do_while_statement -> . DO statement WHILE LPAREN expression RPAREN
    (46) break_statement -> . BREAK SEMICOLON
    (47) continue_statement -> . CONTINUE SEMICOLON
    (48) discard_statement -> . DISCARD SEMICOLON
    (49) return_statement -> . RETURN SEMICOLON
    (50) return_statement -> . RETURN expression SEMICOLON
    (35) variables_declaration -> . type_expr variables_names SEMICOLON
    (51) expression_statement -> . expression SEMICOLON
    (110) type_expr -> . type
    (111) type_expr -> . identifier
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (112) type -> . TYPE
    (113) identifier -> . IDENTIFIER
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    SEMICOLON       shift and go to state 39
    LCBRACKET       shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 33
    DO              shift and go to state 28
    BREAK           shift and go to state 61
    CONTINUE        shift and go to state 63
    DISCARD         shift and go to state 34
    RETURN          shift and go to state 30
    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    TYPE            shift and go to state 17
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    expression_statement           shift and go to state 27
    constant                       shift and go to state 49
    integer_constant               shift and go to state 31
    break_statement                shift and go to state 32
    string_literal                 shift and go to state 35
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    block_statement                shift and go to state 41
    return_statement               shift and go to state 42
    while_statement                shift and go to state 43
    continue_statement             shift and go to state 44
    statement                      shift and go to state 77
    boolean_constant               shift and go to state 47
    if_statement                   shift and go to state 50
    type                           shift and go to state 20
    do_while_statement             shift and go to state 52
    variables_declaration          shift and go to state 58
    primary_expression             shift and go to state 53
    identifier                     shift and go to state 51
    subscript_access               shift and go to state 60
    type_expr                      shift and go to state 71
    real_constant                  shift and go to state 65
    null_statement                 shift and go to state 67
    expression                     shift and go to state 68
    discard_statement              shift and go to state 69
    call_expression                shift and go to state 70

state 29

    (84) expression -> LNOT . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 78
    call_expression                shift and go to state 70

state 30

    (49) return_statement -> RETURN . SEMICOLON
    (50) return_statement -> RETURN . expression SEMICOLON
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    SEMICOLON       shift and go to state 80
    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 81
    call_expression                shift and go to state 70

state 31

    (101) constant -> integer_constant .

    DOT             reduce using rule 101 (constant -> integer_constant .)
    LBRACKET        reduce using rule 101 (constant -> integer_constant .)
    LPAREN          reduce using rule 101 (constant -> integer_constant .)
    PLUS            reduce using rule 101 (constant -> integer_constant .)
    MINUS           reduce using rule 101 (constant -> integer_constant .)
    MULTIPLY        reduce using rule 101 (constant -> integer_constant .)
    DIVIDE          reduce using rule 101 (constant -> integer_constant .)
    REMAINDER       reduce using rule 101 (constant -> integer_constant .)
    LT              reduce using rule 101 (constant -> integer_constant .)
    LE              reduce using rule 101 (constant -> integer_constant .)
    EQ              reduce using rule 101 (constant -> integer_constant .)
    NE              reduce using rule 101 (constant -> integer_constant .)
    GT              reduce using rule 101 (constant -> integer_constant .)
    GE              reduce using rule 101 (constant -> integer_constant .)
    LAND            reduce using rule 101 (constant -> integer_constant .)
    LOR             reduce using rule 101 (constant -> integer_constant .)
    BITAND          reduce using rule 101 (constant -> integer_constant .)
    BITOR           reduce using rule 101 (constant -> integer_constant .)
    BITXOR          reduce using rule 101 (constant -> integer_constant .)
    SHIFTLEFT       reduce using rule 101 (constant -> integer_constant .)
    SHIFTRIGHT      reduce using rule 101 (constant -> integer_constant .)
    ASSIGN          reduce using rule 101 (constant -> integer_constant .)
    ASSIGN_PLUS     reduce using rule 101 (constant -> integer_constant .)
    ASSIGN_MINUS    reduce using rule 101 (constant -> integer_constant .)
    ASSIGN_MULTIPLY reduce using rule 101 (constant -> integer_constant .)
    ASSIGN_DIVIDE   reduce using rule 101 (constant -> integer_constant .)
    ASSIGN_REMAINDER reduce using rule 101 (constant -> integer_constant .)
    ASSIGN_BITOR    reduce using rule 101 (constant -> integer_constant .)
    ASSIGN_BITAND   reduce using rule 101 (constant -> integer_constant .)
    ASSIGN_BITXOR   reduce using rule 101 (constant -> integer_constant .)
    ASSIGN_SHIFTLEFT reduce using rule 101 (constant -> integer_constant .)
    ASSIGN_SHIFTRIGHT reduce using rule 101 (constant -> integer_constant .)
    SEMICOLON       reduce using rule 101 (constant -> integer_constant .)
    RPAREN          reduce using rule 101 (constant -> integer_constant .)
    COMMA           reduce using rule 101 (constant -> integer_constant .)
    RBRACKET        reduce using rule 101 (constant -> integer_constant .)


state 32

    (29) statement -> break_statement .

    RCBRACKET       reduce using rule 29 (statement -> break_statement .)
    SEMICOLON       reduce using rule 29 (statement -> break_statement .)
    LCBRACKET       reduce using rule 29 (statement -> break_statement .)
    IF              reduce using rule 29 (statement -> break_statement .)
    WHILE           reduce using rule 29 (statement -> break_statement .)
    DO              reduce using rule 29 (statement -> break_statement .)
    BREAK           reduce using rule 29 (statement -> break_statement .)
    CONTINUE        reduce using rule 29 (statement -> break_statement .)
    DISCARD         reduce using rule 29 (statement -> break_statement .)
    RETURN          reduce using rule 29 (statement -> break_statement .)
    PLUS            reduce using rule 29 (statement -> break_statement .)
    MINUS           reduce using rule 29 (statement -> break_statement .)
    LNOT            reduce using rule 29 (statement -> break_statement .)
    BITNOT          reduce using rule 29 (statement -> break_statement .)
    TYPE            reduce using rule 29 (statement -> break_statement .)
    IDENTIFIER      reduce using rule 29 (statement -> break_statement .)
    LPAREN          reduce using rule 29 (statement -> break_statement .)
    INTEGER         reduce using rule 29 (statement -> break_statement .)
    TRUE            reduce using rule 29 (statement -> break_statement .)
    FALSE           reduce using rule 29 (statement -> break_statement .)
    REAL            reduce using rule 29 (statement -> break_statement .)
    STRING          reduce using rule 29 (statement -> break_statement .)
    ELSE            reduce using rule 29 (statement -> break_statement .)


state 33

    (44) while_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 82


state 34

    (48) discard_statement -> DISCARD . SEMICOLON

    SEMICOLON       shift and go to state 83


state 35

    (104) constant -> string_literal .

    DOT             reduce using rule 104 (constant -> string_literal .)
    LBRACKET        reduce using rule 104 (constant -> string_literal .)
    LPAREN          reduce using rule 104 (constant -> string_literal .)
    PLUS            reduce using rule 104 (constant -> string_literal .)
    MINUS           reduce using rule 104 (constant -> string_literal .)
    MULTIPLY        reduce using rule 104 (constant -> string_literal .)
    DIVIDE          reduce using rule 104 (constant -> string_literal .)
    REMAINDER       reduce using rule 104 (constant -> string_literal .)
    LT              reduce using rule 104 (constant -> string_literal .)
    LE              reduce using rule 104 (constant -> string_literal .)
    EQ              reduce using rule 104 (constant -> string_literal .)
    NE              reduce using rule 104 (constant -> string_literal .)
    GT              reduce using rule 104 (constant -> string_literal .)
    GE              reduce using rule 104 (constant -> string_literal .)
    LAND            reduce using rule 104 (constant -> string_literal .)
    LOR             reduce using rule 104 (constant -> string_literal .)
    BITAND          reduce using rule 104 (constant -> string_literal .)
    BITOR           reduce using rule 104 (constant -> string_literal .)
    BITXOR          reduce using rule 104 (constant -> string_literal .)
    SHIFTLEFT       reduce using rule 104 (constant -> string_literal .)
    SHIFTRIGHT      reduce using rule 104 (constant -> string_literal .)
    ASSIGN          reduce using rule 104 (constant -> string_literal .)
    ASSIGN_PLUS     reduce using rule 104 (constant -> string_literal .)
    ASSIGN_MINUS    reduce using rule 104 (constant -> string_literal .)
    ASSIGN_MULTIPLY reduce using rule 104 (constant -> string_literal .)
    ASSIGN_DIVIDE   reduce using rule 104 (constant -> string_literal .)
    ASSIGN_REMAINDER reduce using rule 104 (constant -> string_literal .)
    ASSIGN_BITOR    reduce using rule 104 (constant -> string_literal .)
    ASSIGN_BITAND   reduce using rule 104 (constant -> string_literal .)
    ASSIGN_BITXOR   reduce using rule 104 (constant -> string_literal .)
    ASSIGN_SHIFTLEFT reduce using rule 104 (constant -> string_literal .)
    ASSIGN_SHIFTRIGHT reduce using rule 104 (constant -> string_literal .)
    SEMICOLON       reduce using rule 104 (constant -> string_literal .)
    RPAREN          reduce using rule 104 (constant -> string_literal .)
    COMMA           reduce using rule 104 (constant -> string_literal .)
    RBRACKET        reduce using rule 104 (constant -> string_literal .)


state 36

    (106) boolean_constant -> TRUE .

    DOT             reduce using rule 106 (boolean_constant -> TRUE .)
    LBRACKET        reduce using rule 106 (boolean_constant -> TRUE .)
    LPAREN          reduce using rule 106 (boolean_constant -> TRUE .)
    PLUS            reduce using rule 106 (boolean_constant -> TRUE .)
    MINUS           reduce using rule 106 (boolean_constant -> TRUE .)
    MULTIPLY        reduce using rule 106 (boolean_constant -> TRUE .)
    DIVIDE          reduce using rule 106 (boolean_constant -> TRUE .)
    REMAINDER       reduce using rule 106 (boolean_constant -> TRUE .)
    LT              reduce using rule 106 (boolean_constant -> TRUE .)
    LE              reduce using rule 106 (boolean_constant -> TRUE .)
    EQ              reduce using rule 106 (boolean_constant -> TRUE .)
    NE              reduce using rule 106 (boolean_constant -> TRUE .)
    GT              reduce using rule 106 (boolean_constant -> TRUE .)
    GE              reduce using rule 106 (boolean_constant -> TRUE .)
    LAND            reduce using rule 106 (boolean_constant -> TRUE .)
    LOR             reduce using rule 106 (boolean_constant -> TRUE .)
    BITAND          reduce using rule 106 (boolean_constant -> TRUE .)
    BITOR           reduce using rule 106 (boolean_constant -> TRUE .)
    BITXOR          reduce using rule 106 (boolean_constant -> TRUE .)
    SHIFTLEFT       reduce using rule 106 (boolean_constant -> TRUE .)
    SHIFTRIGHT      reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN          reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN_PLUS     reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN_MINUS    reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN_MULTIPLY reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN_DIVIDE   reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN_REMAINDER reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN_BITOR    reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN_BITAND   reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN_BITXOR   reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN_SHIFTLEFT reduce using rule 106 (boolean_constant -> TRUE .)
    ASSIGN_SHIFTRIGHT reduce using rule 106 (boolean_constant -> TRUE .)
    SEMICOLON       reduce using rule 106 (boolean_constant -> TRUE .)
    RPAREN          reduce using rule 106 (boolean_constant -> TRUE .)
    COMMA           reduce using rule 106 (boolean_constant -> TRUE .)
    RBRACKET        reduce using rule 106 (boolean_constant -> TRUE .)


state 37

    (83) expression -> MINUS . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 84
    call_expression                shift and go to state 70

state 38

    (21) function_definition -> function_prototype LCBRACKET statement_list RCBRACKET .

    KERNEL          reduce using rule 21 (function_definition -> function_prototype LCBRACKET statement_list RCBRACKET .)
    STRUCT          reduce using rule 21 (function_definition -> function_prototype LCBRACKET statement_list RCBRACKET .)
    LBRACKET        reduce using rule 21 (function_definition -> function_prototype LCBRACKET statement_list RCBRACKET .)
    TYPE            reduce using rule 21 (function_definition -> function_prototype LCBRACKET statement_list RCBRACKET .)
    IDENTIFIER      reduce using rule 21 (function_definition -> function_prototype LCBRACKET statement_list RCBRACKET .)
    $end            reduce using rule 21 (function_definition -> function_prototype LCBRACKET statement_list RCBRACKET .)


state 39

    (40) null_statement -> SEMICOLON .

    RCBRACKET       reduce using rule 40 (null_statement -> SEMICOLON .)
    SEMICOLON       reduce using rule 40 (null_statement -> SEMICOLON .)
    LCBRACKET       reduce using rule 40 (null_statement -> SEMICOLON .)
    IF              reduce using rule 40 (null_statement -> SEMICOLON .)
    WHILE           reduce using rule 40 (null_statement -> SEMICOLON .)
    DO              reduce using rule 40 (null_statement -> SEMICOLON .)
    BREAK           reduce using rule 40 (null_statement -> SEMICOLON .)
    CONTINUE        reduce using rule 40 (null_statement -> SEMICOLON .)
    DISCARD         reduce using rule 40 (null_statement -> SEMICOLON .)
    RETURN          reduce using rule 40 (null_statement -> SEMICOLON .)
    PLUS            reduce using rule 40 (null_statement -> SEMICOLON .)
    MINUS           reduce using rule 40 (null_statement -> SEMICOLON .)
    LNOT            reduce using rule 40 (null_statement -> SEMICOLON .)
    BITNOT          reduce using rule 40 (null_statement -> SEMICOLON .)
    TYPE            reduce using rule 40 (null_statement -> SEMICOLON .)
    IDENTIFIER      reduce using rule 40 (null_statement -> SEMICOLON .)
    LPAREN          reduce using rule 40 (null_statement -> SEMICOLON .)
    INTEGER         reduce using rule 40 (null_statement -> SEMICOLON .)
    TRUE            reduce using rule 40 (null_statement -> SEMICOLON .)
    FALSE           reduce using rule 40 (null_statement -> SEMICOLON .)
    REAL            reduce using rule 40 (null_statement -> SEMICOLON .)
    STRING          reduce using rule 40 (null_statement -> SEMICOLON .)
    ELSE            reduce using rule 40 (null_statement -> SEMICOLON .)


state 40

    (89) primary_expression -> member_access .

    DOT             reduce using rule 89 (primary_expression -> member_access .)
    LBRACKET        reduce using rule 89 (primary_expression -> member_access .)
    LPAREN          reduce using rule 89 (primary_expression -> member_access .)
    PLUS            reduce using rule 89 (primary_expression -> member_access .)
    MINUS           reduce using rule 89 (primary_expression -> member_access .)
    MULTIPLY        reduce using rule 89 (primary_expression -> member_access .)
    DIVIDE          reduce using rule 89 (primary_expression -> member_access .)
    REMAINDER       reduce using rule 89 (primary_expression -> member_access .)
    LT              reduce using rule 89 (primary_expression -> member_access .)
    LE              reduce using rule 89 (primary_expression -> member_access .)
    EQ              reduce using rule 89 (primary_expression -> member_access .)
    NE              reduce using rule 89 (primary_expression -> member_access .)
    GT              reduce using rule 89 (primary_expression -> member_access .)
    GE              reduce using rule 89 (primary_expression -> member_access .)
    LAND            reduce using rule 89 (primary_expression -> member_access .)
    LOR             reduce using rule 89 (primary_expression -> member_access .)
    BITAND          reduce using rule 89 (primary_expression -> member_access .)
    BITOR           reduce using rule 89 (primary_expression -> member_access .)
    BITXOR          reduce using rule 89 (primary_expression -> member_access .)
    SHIFTLEFT       reduce using rule 89 (primary_expression -> member_access .)
    SHIFTRIGHT      reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN          reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN_PLUS     reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN_MINUS    reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN_MULTIPLY reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN_DIVIDE   reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN_REMAINDER reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN_BITOR    reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN_BITAND   reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN_BITXOR   reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN_SHIFTLEFT reduce using rule 89 (primary_expression -> member_access .)
    ASSIGN_SHIFTRIGHT reduce using rule 89 (primary_expression -> member_access .)
    SEMICOLON       reduce using rule 89 (primary_expression -> member_access .)
    RPAREN          reduce using rule 89 (primary_expression -> member_access .)
    COMMA           reduce using rule 89 (primary_expression -> member_access .)
    RBRACKET        reduce using rule 89 (primary_expression -> member_access .)


state 41

    (25) statement -> block_statement .

    RCBRACKET       reduce using rule 25 (statement -> block_statement .)
    SEMICOLON       reduce using rule 25 (statement -> block_statement .)
    LCBRACKET       reduce using rule 25 (statement -> block_statement .)
    IF              reduce using rule 25 (statement -> block_statement .)
    WHILE           reduce using rule 25 (statement -> block_statement .)
    DO              reduce using rule 25 (statement -> block_statement .)
    BREAK           reduce using rule 25 (statement -> block_statement .)
    CONTINUE        reduce using rule 25 (statement -> block_statement .)
    DISCARD         reduce using rule 25 (statement -> block_statement .)
    RETURN          reduce using rule 25 (statement -> block_statement .)
    PLUS            reduce using rule 25 (statement -> block_statement .)
    MINUS           reduce using rule 25 (statement -> block_statement .)
    LNOT            reduce using rule 25 (statement -> block_statement .)
    BITNOT          reduce using rule 25 (statement -> block_statement .)
    TYPE            reduce using rule 25 (statement -> block_statement .)
    IDENTIFIER      reduce using rule 25 (statement -> block_statement .)
    LPAREN          reduce using rule 25 (statement -> block_statement .)
    INTEGER         reduce using rule 25 (statement -> block_statement .)
    TRUE            reduce using rule 25 (statement -> block_statement .)
    FALSE           reduce using rule 25 (statement -> block_statement .)
    REAL            reduce using rule 25 (statement -> block_statement .)
    STRING          reduce using rule 25 (statement -> block_statement .)
    ELSE            reduce using rule 25 (statement -> block_statement .)


state 42

    (32) statement -> return_statement .

    RCBRACKET       reduce using rule 32 (statement -> return_statement .)
    SEMICOLON       reduce using rule 32 (statement -> return_statement .)
    LCBRACKET       reduce using rule 32 (statement -> return_statement .)
    IF              reduce using rule 32 (statement -> return_statement .)
    WHILE           reduce using rule 32 (statement -> return_statement .)
    DO              reduce using rule 32 (statement -> return_statement .)
    BREAK           reduce using rule 32 (statement -> return_statement .)
    CONTINUE        reduce using rule 32 (statement -> return_statement .)
    DISCARD         reduce using rule 32 (statement -> return_statement .)
    RETURN          reduce using rule 32 (statement -> return_statement .)
    PLUS            reduce using rule 32 (statement -> return_statement .)
    MINUS           reduce using rule 32 (statement -> return_statement .)
    LNOT            reduce using rule 32 (statement -> return_statement .)
    BITNOT          reduce using rule 32 (statement -> return_statement .)
    TYPE            reduce using rule 32 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 32 (statement -> return_statement .)
    LPAREN          reduce using rule 32 (statement -> return_statement .)
    INTEGER         reduce using rule 32 (statement -> return_statement .)
    TRUE            reduce using rule 32 (statement -> return_statement .)
    FALSE           reduce using rule 32 (statement -> return_statement .)
    REAL            reduce using rule 32 (statement -> return_statement .)
    STRING          reduce using rule 32 (statement -> return_statement .)
    ELSE            reduce using rule 32 (statement -> return_statement .)


state 43

    (27) statement -> while_statement .

    RCBRACKET       reduce using rule 27 (statement -> while_statement .)
    SEMICOLON       reduce using rule 27 (statement -> while_statement .)
    LCBRACKET       reduce using rule 27 (statement -> while_statement .)
    IF              reduce using rule 27 (statement -> while_statement .)
    WHILE           reduce using rule 27 (statement -> while_statement .)
    DO              reduce using rule 27 (statement -> while_statement .)
    BREAK           reduce using rule 27 (statement -> while_statement .)
    CONTINUE        reduce using rule 27 (statement -> while_statement .)
    DISCARD         reduce using rule 27 (statement -> while_statement .)
    RETURN          reduce using rule 27 (statement -> while_statement .)
    PLUS            reduce using rule 27 (statement -> while_statement .)
    MINUS           reduce using rule 27 (statement -> while_statement .)
    LNOT            reduce using rule 27 (statement -> while_statement .)
    BITNOT          reduce using rule 27 (statement -> while_statement .)
    TYPE            reduce using rule 27 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 27 (statement -> while_statement .)
    LPAREN          reduce using rule 27 (statement -> while_statement .)
    INTEGER         reduce using rule 27 (statement -> while_statement .)
    TRUE            reduce using rule 27 (statement -> while_statement .)
    FALSE           reduce using rule 27 (statement -> while_statement .)
    REAL            reduce using rule 27 (statement -> while_statement .)
    STRING          reduce using rule 27 (statement -> while_statement .)
    ELSE            reduce using rule 27 (statement -> while_statement .)


state 44

    (30) statement -> continue_statement .

    RCBRACKET       reduce using rule 30 (statement -> continue_statement .)
    SEMICOLON       reduce using rule 30 (statement -> continue_statement .)
    LCBRACKET       reduce using rule 30 (statement -> continue_statement .)
    IF              reduce using rule 30 (statement -> continue_statement .)
    WHILE           reduce using rule 30 (statement -> continue_statement .)
    DO              reduce using rule 30 (statement -> continue_statement .)
    BREAK           reduce using rule 30 (statement -> continue_statement .)
    CONTINUE        reduce using rule 30 (statement -> continue_statement .)
    DISCARD         reduce using rule 30 (statement -> continue_statement .)
    RETURN          reduce using rule 30 (statement -> continue_statement .)
    PLUS            reduce using rule 30 (statement -> continue_statement .)
    MINUS           reduce using rule 30 (statement -> continue_statement .)
    LNOT            reduce using rule 30 (statement -> continue_statement .)
    BITNOT          reduce using rule 30 (statement -> continue_statement .)
    TYPE            reduce using rule 30 (statement -> continue_statement .)
    IDENTIFIER      reduce using rule 30 (statement -> continue_statement .)
    LPAREN          reduce using rule 30 (statement -> continue_statement .)
    INTEGER         reduce using rule 30 (statement -> continue_statement .)
    TRUE            reduce using rule 30 (statement -> continue_statement .)
    FALSE           reduce using rule 30 (statement -> continue_statement .)
    REAL            reduce using rule 30 (statement -> continue_statement .)
    STRING          reduce using rule 30 (statement -> continue_statement .)
    ELSE            reduce using rule 30 (statement -> continue_statement .)


state 45

    (82) expression -> PLUS . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 85
    call_expression                shift and go to state 70

state 46

    (23) statement_list -> statement_list statement .

    RCBRACKET       reduce using rule 23 (statement_list -> statement_list statement .)
    SEMICOLON       reduce using rule 23 (statement_list -> statement_list statement .)
    LCBRACKET       reduce using rule 23 (statement_list -> statement_list statement .)
    IF              reduce using rule 23 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 23 (statement_list -> statement_list statement .)
    DO              reduce using rule 23 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 23 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 23 (statement_list -> statement_list statement .)
    DISCARD         reduce using rule 23 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 23 (statement_list -> statement_list statement .)
    PLUS            reduce using rule 23 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 23 (statement_list -> statement_list statement .)
    LNOT            reduce using rule 23 (statement_list -> statement_list statement .)
    BITNOT          reduce using rule 23 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 23 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 23 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 23 (statement_list -> statement_list statement .)
    INTEGER         reduce using rule 23 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 23 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 23 (statement_list -> statement_list statement .)
    REAL            reduce using rule 23 (statement_list -> statement_list statement .)
    STRING          reduce using rule 23 (statement_list -> statement_list statement .)


state 47

    (102) constant -> boolean_constant .

    DOT             reduce using rule 102 (constant -> boolean_constant .)
    LBRACKET        reduce using rule 102 (constant -> boolean_constant .)
    LPAREN          reduce using rule 102 (constant -> boolean_constant .)
    PLUS            reduce using rule 102 (constant -> boolean_constant .)
    MINUS           reduce using rule 102 (constant -> boolean_constant .)
    MULTIPLY        reduce using rule 102 (constant -> boolean_constant .)
    DIVIDE          reduce using rule 102 (constant -> boolean_constant .)
    REMAINDER       reduce using rule 102 (constant -> boolean_constant .)
    LT              reduce using rule 102 (constant -> boolean_constant .)
    LE              reduce using rule 102 (constant -> boolean_constant .)
    EQ              reduce using rule 102 (constant -> boolean_constant .)
    NE              reduce using rule 102 (constant -> boolean_constant .)
    GT              reduce using rule 102 (constant -> boolean_constant .)
    GE              reduce using rule 102 (constant -> boolean_constant .)
    LAND            reduce using rule 102 (constant -> boolean_constant .)
    LOR             reduce using rule 102 (constant -> boolean_constant .)
    BITAND          reduce using rule 102 (constant -> boolean_constant .)
    BITOR           reduce using rule 102 (constant -> boolean_constant .)
    BITXOR          reduce using rule 102 (constant -> boolean_constant .)
    SHIFTLEFT       reduce using rule 102 (constant -> boolean_constant .)
    SHIFTRIGHT      reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN          reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN_PLUS     reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN_MINUS    reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN_MULTIPLY reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN_DIVIDE   reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN_REMAINDER reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN_BITOR    reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN_BITAND   reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN_BITXOR   reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN_SHIFTLEFT reduce using rule 102 (constant -> boolean_constant .)
    ASSIGN_SHIFTRIGHT reduce using rule 102 (constant -> boolean_constant .)
    SEMICOLON       reduce using rule 102 (constant -> boolean_constant .)
    RPAREN          reduce using rule 102 (constant -> boolean_constant .)
    COMMA           reduce using rule 102 (constant -> boolean_constant .)
    RBRACKET        reduce using rule 102 (constant -> boolean_constant .)


state 48

    (105) integer_constant -> INTEGER .

    DOT             reduce using rule 105 (integer_constant -> INTEGER .)
    LBRACKET        reduce using rule 105 (integer_constant -> INTEGER .)
    LPAREN          reduce using rule 105 (integer_constant -> INTEGER .)
    PLUS            reduce using rule 105 (integer_constant -> INTEGER .)
    MINUS           reduce using rule 105 (integer_constant -> INTEGER .)
    MULTIPLY        reduce using rule 105 (integer_constant -> INTEGER .)
    DIVIDE          reduce using rule 105 (integer_constant -> INTEGER .)
    REMAINDER       reduce using rule 105 (integer_constant -> INTEGER .)
    LT              reduce using rule 105 (integer_constant -> INTEGER .)
    LE              reduce using rule 105 (integer_constant -> INTEGER .)
    EQ              reduce using rule 105 (integer_constant -> INTEGER .)
    NE              reduce using rule 105 (integer_constant -> INTEGER .)
    GT              reduce using rule 105 (integer_constant -> INTEGER .)
    GE              reduce using rule 105 (integer_constant -> INTEGER .)
    LAND            reduce using rule 105 (integer_constant -> INTEGER .)
    LOR             reduce using rule 105 (integer_constant -> INTEGER .)
    BITAND          reduce using rule 105 (integer_constant -> INTEGER .)
    BITOR           reduce using rule 105 (integer_constant -> INTEGER .)
    BITXOR          reduce using rule 105 (integer_constant -> INTEGER .)
    SHIFTLEFT       reduce using rule 105 (integer_constant -> INTEGER .)
    SHIFTRIGHT      reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN          reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN_PLUS     reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN_MINUS    reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN_MULTIPLY reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN_DIVIDE   reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN_REMAINDER reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN_BITOR    reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN_BITAND   reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN_BITXOR   reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN_SHIFTLEFT reduce using rule 105 (integer_constant -> INTEGER .)
    ASSIGN_SHIFTRIGHT reduce using rule 105 (integer_constant -> INTEGER .)
    COMMA           reduce using rule 105 (integer_constant -> INTEGER .)
    RPAREN          reduce using rule 105 (integer_constant -> INTEGER .)
    SEMICOLON       reduce using rule 105 (integer_constant -> INTEGER .)
    RBRACKET        reduce using rule 105 (integer_constant -> INTEGER .)


state 49

    (86) primary_expression -> constant .

    DOT             reduce using rule 86 (primary_expression -> constant .)
    LBRACKET        reduce using rule 86 (primary_expression -> constant .)
    LPAREN          reduce using rule 86 (primary_expression -> constant .)
    PLUS            reduce using rule 86 (primary_expression -> constant .)
    MINUS           reduce using rule 86 (primary_expression -> constant .)
    MULTIPLY        reduce using rule 86 (primary_expression -> constant .)
    DIVIDE          reduce using rule 86 (primary_expression -> constant .)
    REMAINDER       reduce using rule 86 (primary_expression -> constant .)
    LT              reduce using rule 86 (primary_expression -> constant .)
    LE              reduce using rule 86 (primary_expression -> constant .)
    EQ              reduce using rule 86 (primary_expression -> constant .)
    NE              reduce using rule 86 (primary_expression -> constant .)
    GT              reduce using rule 86 (primary_expression -> constant .)
    GE              reduce using rule 86 (primary_expression -> constant .)
    LAND            reduce using rule 86 (primary_expression -> constant .)
    LOR             reduce using rule 86 (primary_expression -> constant .)
    BITAND          reduce using rule 86 (primary_expression -> constant .)
    BITOR           reduce using rule 86 (primary_expression -> constant .)
    BITXOR          reduce using rule 86 (primary_expression -> constant .)
    SHIFTLEFT       reduce using rule 86 (primary_expression -> constant .)
    SHIFTRIGHT      reduce using rule 86 (primary_expression -> constant .)
    ASSIGN          reduce using rule 86 (primary_expression -> constant .)
    ASSIGN_PLUS     reduce using rule 86 (primary_expression -> constant .)
    ASSIGN_MINUS    reduce using rule 86 (primary_expression -> constant .)
    ASSIGN_MULTIPLY reduce using rule 86 (primary_expression -> constant .)
    ASSIGN_DIVIDE   reduce using rule 86 (primary_expression -> constant .)
    ASSIGN_REMAINDER reduce using rule 86 (primary_expression -> constant .)
    ASSIGN_BITOR    reduce using rule 86 (primary_expression -> constant .)
    ASSIGN_BITAND   reduce using rule 86 (primary_expression -> constant .)
    ASSIGN_BITXOR   reduce using rule 86 (primary_expression -> constant .)
    ASSIGN_SHIFTLEFT reduce using rule 86 (primary_expression -> constant .)
    ASSIGN_SHIFTRIGHT reduce using rule 86 (primary_expression -> constant .)
    SEMICOLON       reduce using rule 86 (primary_expression -> constant .)
    RPAREN          reduce using rule 86 (primary_expression -> constant .)
    COMMA           reduce using rule 86 (primary_expression -> constant .)
    RBRACKET        reduce using rule 86 (primary_expression -> constant .)


state 50

    (26) statement -> if_statement .

    RCBRACKET       reduce using rule 26 (statement -> if_statement .)
    SEMICOLON       reduce using rule 26 (statement -> if_statement .)
    LCBRACKET       reduce using rule 26 (statement -> if_statement .)
    IF              reduce using rule 26 (statement -> if_statement .)
    WHILE           reduce using rule 26 (statement -> if_statement .)
    DO              reduce using rule 26 (statement -> if_statement .)
    BREAK           reduce using rule 26 (statement -> if_statement .)
    CONTINUE        reduce using rule 26 (statement -> if_statement .)
    DISCARD         reduce using rule 26 (statement -> if_statement .)
    RETURN          reduce using rule 26 (statement -> if_statement .)
    PLUS            reduce using rule 26 (statement -> if_statement .)
    MINUS           reduce using rule 26 (statement -> if_statement .)
    LNOT            reduce using rule 26 (statement -> if_statement .)
    BITNOT          reduce using rule 26 (statement -> if_statement .)
    TYPE            reduce using rule 26 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 26 (statement -> if_statement .)
    LPAREN          reduce using rule 26 (statement -> if_statement .)
    INTEGER         reduce using rule 26 (statement -> if_statement .)
    TRUE            reduce using rule 26 (statement -> if_statement .)
    FALSE           reduce using rule 26 (statement -> if_statement .)
    REAL            reduce using rule 26 (statement -> if_statement .)
    STRING          reduce using rule 26 (statement -> if_statement .)
    ELSE            reduce using rule 26 (statement -> if_statement .)


state 51

    (111) type_expr -> identifier .
    (87) primary_expression -> identifier .

    IDENTIFIER      reduce using rule 111 (type_expr -> identifier .)
    DOT             reduce using rule 87 (primary_expression -> identifier .)
    LBRACKET        reduce using rule 87 (primary_expression -> identifier .)
    LPAREN          reduce using rule 87 (primary_expression -> identifier .)
    SEMICOLON       reduce using rule 87 (primary_expression -> identifier .)
    PLUS            reduce using rule 87 (primary_expression -> identifier .)
    MINUS           reduce using rule 87 (primary_expression -> identifier .)
    MULTIPLY        reduce using rule 87 (primary_expression -> identifier .)
    DIVIDE          reduce using rule 87 (primary_expression -> identifier .)
    REMAINDER       reduce using rule 87 (primary_expression -> identifier .)
    LT              reduce using rule 87 (primary_expression -> identifier .)
    LE              reduce using rule 87 (primary_expression -> identifier .)
    EQ              reduce using rule 87 (primary_expression -> identifier .)
    NE              reduce using rule 87 (primary_expression -> identifier .)
    GT              reduce using rule 87 (primary_expression -> identifier .)
    GE              reduce using rule 87 (primary_expression -> identifier .)
    LAND            reduce using rule 87 (primary_expression -> identifier .)
    LOR             reduce using rule 87 (primary_expression -> identifier .)
    BITAND          reduce using rule 87 (primary_expression -> identifier .)
    BITOR           reduce using rule 87 (primary_expression -> identifier .)
    BITXOR          reduce using rule 87 (primary_expression -> identifier .)
    SHIFTLEFT       reduce using rule 87 (primary_expression -> identifier .)
    SHIFTRIGHT      reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN          reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_PLUS     reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_MINUS    reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_MULTIPLY reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_DIVIDE   reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_REMAINDER reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_BITOR    reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_BITAND   reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_BITXOR   reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_SHIFTLEFT reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_SHIFTRIGHT reduce using rule 87 (primary_expression -> identifier .)


state 52

    (28) statement -> do_while_statement .

    RCBRACKET       reduce using rule 28 (statement -> do_while_statement .)
    SEMICOLON       reduce using rule 28 (statement -> do_while_statement .)
    LCBRACKET       reduce using rule 28 (statement -> do_while_statement .)
    IF              reduce using rule 28 (statement -> do_while_statement .)
    WHILE           reduce using rule 28 (statement -> do_while_statement .)
    DO              reduce using rule 28 (statement -> do_while_statement .)
    BREAK           reduce using rule 28 (statement -> do_while_statement .)
    CONTINUE        reduce using rule 28 (statement -> do_while_statement .)
    DISCARD         reduce using rule 28 (statement -> do_while_statement .)
    RETURN          reduce using rule 28 (statement -> do_while_statement .)
    PLUS            reduce using rule 28 (statement -> do_while_statement .)
    MINUS           reduce using rule 28 (statement -> do_while_statement .)
    LNOT            reduce using rule 28 (statement -> do_while_statement .)
    BITNOT          reduce using rule 28 (statement -> do_while_statement .)
    TYPE            reduce using rule 28 (statement -> do_while_statement .)
    IDENTIFIER      reduce using rule 28 (statement -> do_while_statement .)
    LPAREN          reduce using rule 28 (statement -> do_while_statement .)
    INTEGER         reduce using rule 28 (statement -> do_while_statement .)
    TRUE            reduce using rule 28 (statement -> do_while_statement .)
    FALSE           reduce using rule 28 (statement -> do_while_statement .)
    REAL            reduce using rule 28 (statement -> do_while_statement .)
    STRING          reduce using rule 28 (statement -> do_while_statement .)
    ELSE            reduce using rule 28 (statement -> do_while_statement .)


state 53

    (52) expression -> primary_expression .
    (93) member_access -> primary_expression . DOT IDENTIFIER
    (94) subscript_access -> primary_expression . LBRACKET expression RBRACKET
    (95) call_expression -> primary_expression . LPAREN call_arguments RPAREN

    PLUS            reduce using rule 52 (expression -> primary_expression .)
    MINUS           reduce using rule 52 (expression -> primary_expression .)
    MULTIPLY        reduce using rule 52 (expression -> primary_expression .)
    DIVIDE          reduce using rule 52 (expression -> primary_expression .)
    REMAINDER       reduce using rule 52 (expression -> primary_expression .)
    LT              reduce using rule 52 (expression -> primary_expression .)
    LE              reduce using rule 52 (expression -> primary_expression .)
    EQ              reduce using rule 52 (expression -> primary_expression .)
    NE              reduce using rule 52 (expression -> primary_expression .)
    GT              reduce using rule 52 (expression -> primary_expression .)
    GE              reduce using rule 52 (expression -> primary_expression .)
    LAND            reduce using rule 52 (expression -> primary_expression .)
    LOR             reduce using rule 52 (expression -> primary_expression .)
    BITAND          reduce using rule 52 (expression -> primary_expression .)
    BITOR           reduce using rule 52 (expression -> primary_expression .)
    BITXOR          reduce using rule 52 (expression -> primary_expression .)
    SHIFTLEFT       reduce using rule 52 (expression -> primary_expression .)
    SHIFTRIGHT      reduce using rule 52 (expression -> primary_expression .)
    ASSIGN          reduce using rule 52 (expression -> primary_expression .)
    ASSIGN_PLUS     reduce using rule 52 (expression -> primary_expression .)
    ASSIGN_MINUS    reduce using rule 52 (expression -> primary_expression .)
    ASSIGN_MULTIPLY reduce using rule 52 (expression -> primary_expression .)
    ASSIGN_DIVIDE   reduce using rule 52 (expression -> primary_expression .)
    ASSIGN_REMAINDER reduce using rule 52 (expression -> primary_expression .)
    ASSIGN_BITOR    reduce using rule 52 (expression -> primary_expression .)
    ASSIGN_BITAND   reduce using rule 52 (expression -> primary_expression .)
    ASSIGN_BITXOR   reduce using rule 52 (expression -> primary_expression .)
    ASSIGN_SHIFTLEFT reduce using rule 52 (expression -> primary_expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 52 (expression -> primary_expression .)
    SEMICOLON       reduce using rule 52 (expression -> primary_expression .)
    RPAREN          reduce using rule 52 (expression -> primary_expression .)
    COMMA           reduce using rule 52 (expression -> primary_expression .)
    RBRACKET        reduce using rule 52 (expression -> primary_expression .)
    DOT             shift and go to state 88
    LBRACKET        shift and go to state 86
    LPAREN          shift and go to state 87


state 54

    (92) parenthesis_expression -> LPAREN . expression RPAREN
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 89
    call_expression                shift and go to state 70

state 55

    (41) block_statement -> LCBRACKET . statement_list RCBRACKET
    (22) statement_list -> .
    (23) statement_list -> . statement_list statement

    RCBRACKET       reduce using rule 22 (statement_list -> .)
    SEMICOLON       reduce using rule 22 (statement_list -> .)
    LCBRACKET       reduce using rule 22 (statement_list -> .)
    IF              reduce using rule 22 (statement_list -> .)
    WHILE           reduce using rule 22 (statement_list -> .)
    DO              reduce using rule 22 (statement_list -> .)
    BREAK           reduce using rule 22 (statement_list -> .)
    CONTINUE        reduce using rule 22 (statement_list -> .)
    DISCARD         reduce using rule 22 (statement_list -> .)
    RETURN          reduce using rule 22 (statement_list -> .)
    PLUS            reduce using rule 22 (statement_list -> .)
    MINUS           reduce using rule 22 (statement_list -> .)
    LNOT            reduce using rule 22 (statement_list -> .)
    BITNOT          reduce using rule 22 (statement_list -> .)
    TYPE            reduce using rule 22 (statement_list -> .)
    IDENTIFIER      reduce using rule 22 (statement_list -> .)
    LPAREN          reduce using rule 22 (statement_list -> .)
    INTEGER         reduce using rule 22 (statement_list -> .)
    TRUE            reduce using rule 22 (statement_list -> .)
    FALSE           reduce using rule 22 (statement_list -> .)
    REAL            reduce using rule 22 (statement_list -> .)
    STRING          reduce using rule 22 (statement_list -> .)

    statement_list                 shift and go to state 90

state 56

    (88) primary_expression -> parenthesis_expression .

    DOT             reduce using rule 88 (primary_expression -> parenthesis_expression .)
    LBRACKET        reduce using rule 88 (primary_expression -> parenthesis_expression .)
    LPAREN          reduce using rule 88 (primary_expression -> parenthesis_expression .)
    PLUS            reduce using rule 88 (primary_expression -> parenthesis_expression .)
    MINUS           reduce using rule 88 (primary_expression -> parenthesis_expression .)
    MULTIPLY        reduce using rule 88 (primary_expression -> parenthesis_expression .)
    DIVIDE          reduce using rule 88 (primary_expression -> parenthesis_expression .)
    REMAINDER       reduce using rule 88 (primary_expression -> parenthesis_expression .)
    LT              reduce using rule 88 (primary_expression -> parenthesis_expression .)
    LE              reduce using rule 88 (primary_expression -> parenthesis_expression .)
    EQ              reduce using rule 88 (primary_expression -> parenthesis_expression .)
    NE              reduce using rule 88 (primary_expression -> parenthesis_expression .)
    GT              reduce using rule 88 (primary_expression -> parenthesis_expression .)
    GE              reduce using rule 88 (primary_expression -> parenthesis_expression .)
    LAND            reduce using rule 88 (primary_expression -> parenthesis_expression .)
    LOR             reduce using rule 88 (primary_expression -> parenthesis_expression .)
    BITAND          reduce using rule 88 (primary_expression -> parenthesis_expression .)
    BITOR           reduce using rule 88 (primary_expression -> parenthesis_expression .)
    BITXOR          reduce using rule 88 (primary_expression -> parenthesis_expression .)
    SHIFTLEFT       reduce using rule 88 (primary_expression -> parenthesis_expression .)
    SHIFTRIGHT      reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN          reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN_PLUS     reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN_MINUS    reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN_MULTIPLY reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN_DIVIDE   reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN_REMAINDER reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN_BITOR    reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN_BITAND   reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN_BITXOR   reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN_SHIFTLEFT reduce using rule 88 (primary_expression -> parenthesis_expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 88 (primary_expression -> parenthesis_expression .)
    SEMICOLON       reduce using rule 88 (primary_expression -> parenthesis_expression .)
    RPAREN          reduce using rule 88 (primary_expression -> parenthesis_expression .)
    COMMA           reduce using rule 88 (primary_expression -> parenthesis_expression .)
    RBRACKET        reduce using rule 88 (primary_expression -> parenthesis_expression .)


state 57

    (42) if_statement -> IF . LPAREN expression RPAREN statement
    (43) if_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 91


state 58

    (33) statement -> variables_declaration .

    RCBRACKET       reduce using rule 33 (statement -> variables_declaration .)
    SEMICOLON       reduce using rule 33 (statement -> variables_declaration .)
    LCBRACKET       reduce using rule 33 (statement -> variables_declaration .)
    IF              reduce using rule 33 (statement -> variables_declaration .)
    WHILE           reduce using rule 33 (statement -> variables_declaration .)
    DO              reduce using rule 33 (statement -> variables_declaration .)
    BREAK           reduce using rule 33 (statement -> variables_declaration .)
    CONTINUE        reduce using rule 33 (statement -> variables_declaration .)
    DISCARD         reduce using rule 33 (statement -> variables_declaration .)
    RETURN          reduce using rule 33 (statement -> variables_declaration .)
    PLUS            reduce using rule 33 (statement -> variables_declaration .)
    MINUS           reduce using rule 33 (statement -> variables_declaration .)
    LNOT            reduce using rule 33 (statement -> variables_declaration .)
    BITNOT          reduce using rule 33 (statement -> variables_declaration .)
    TYPE            reduce using rule 33 (statement -> variables_declaration .)
    IDENTIFIER      reduce using rule 33 (statement -> variables_declaration .)
    LPAREN          reduce using rule 33 (statement -> variables_declaration .)
    INTEGER         reduce using rule 33 (statement -> variables_declaration .)
    TRUE            reduce using rule 33 (statement -> variables_declaration .)
    FALSE           reduce using rule 33 (statement -> variables_declaration .)
    REAL            reduce using rule 33 (statement -> variables_declaration .)
    STRING          reduce using rule 33 (statement -> variables_declaration .)
    ELSE            reduce using rule 33 (statement -> variables_declaration .)


state 59

    (107) boolean_constant -> FALSE .

    DOT             reduce using rule 107 (boolean_constant -> FALSE .)
    LBRACKET        reduce using rule 107 (boolean_constant -> FALSE .)
    LPAREN          reduce using rule 107 (boolean_constant -> FALSE .)
    PLUS            reduce using rule 107 (boolean_constant -> FALSE .)
    MINUS           reduce using rule 107 (boolean_constant -> FALSE .)
    MULTIPLY        reduce using rule 107 (boolean_constant -> FALSE .)
    DIVIDE          reduce using rule 107 (boolean_constant -> FALSE .)
    REMAINDER       reduce using rule 107 (boolean_constant -> FALSE .)
    LT              reduce using rule 107 (boolean_constant -> FALSE .)
    LE              reduce using rule 107 (boolean_constant -> FALSE .)
    EQ              reduce using rule 107 (boolean_constant -> FALSE .)
    NE              reduce using rule 107 (boolean_constant -> FALSE .)
    GT              reduce using rule 107 (boolean_constant -> FALSE .)
    GE              reduce using rule 107 (boolean_constant -> FALSE .)
    LAND            reduce using rule 107 (boolean_constant -> FALSE .)
    LOR             reduce using rule 107 (boolean_constant -> FALSE .)
    BITAND          reduce using rule 107 (boolean_constant -> FALSE .)
    BITOR           reduce using rule 107 (boolean_constant -> FALSE .)
    BITXOR          reduce using rule 107 (boolean_constant -> FALSE .)
    SHIFTLEFT       reduce using rule 107 (boolean_constant -> FALSE .)
    SHIFTRIGHT      reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN          reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN_PLUS     reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN_MINUS    reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN_MULTIPLY reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN_DIVIDE   reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN_REMAINDER reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN_BITOR    reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN_BITAND   reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN_BITXOR   reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN_SHIFTLEFT reduce using rule 107 (boolean_constant -> FALSE .)
    ASSIGN_SHIFTRIGHT reduce using rule 107 (boolean_constant -> FALSE .)
    SEMICOLON       reduce using rule 107 (boolean_constant -> FALSE .)
    RPAREN          reduce using rule 107 (boolean_constant -> FALSE .)
    COMMA           reduce using rule 107 (boolean_constant -> FALSE .)
    RBRACKET        reduce using rule 107 (boolean_constant -> FALSE .)


state 60

    (90) primary_expression -> subscript_access .

    DOT             reduce using rule 90 (primary_expression -> subscript_access .)
    LBRACKET        reduce using rule 90 (primary_expression -> subscript_access .)
    LPAREN          reduce using rule 90 (primary_expression -> subscript_access .)
    PLUS            reduce using rule 90 (primary_expression -> subscript_access .)
    MINUS           reduce using rule 90 (primary_expression -> subscript_access .)
    MULTIPLY        reduce using rule 90 (primary_expression -> subscript_access .)
    DIVIDE          reduce using rule 90 (primary_expression -> subscript_access .)
    REMAINDER       reduce using rule 90 (primary_expression -> subscript_access .)
    LT              reduce using rule 90 (primary_expression -> subscript_access .)
    LE              reduce using rule 90 (primary_expression -> subscript_access .)
    EQ              reduce using rule 90 (primary_expression -> subscript_access .)
    NE              reduce using rule 90 (primary_expression -> subscript_access .)
    GT              reduce using rule 90 (primary_expression -> subscript_access .)
    GE              reduce using rule 90 (primary_expression -> subscript_access .)
    LAND            reduce using rule 90 (primary_expression -> subscript_access .)
    LOR             reduce using rule 90 (primary_expression -> subscript_access .)
    BITAND          reduce using rule 90 (primary_expression -> subscript_access .)
    BITOR           reduce using rule 90 (primary_expression -> subscript_access .)
    BITXOR          reduce using rule 90 (primary_expression -> subscript_access .)
    SHIFTLEFT       reduce using rule 90 (primary_expression -> subscript_access .)
    SHIFTRIGHT      reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN          reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN_PLUS     reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN_MINUS    reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN_MULTIPLY reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN_DIVIDE   reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN_REMAINDER reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN_BITOR    reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN_BITAND   reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN_BITXOR   reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN_SHIFTLEFT reduce using rule 90 (primary_expression -> subscript_access .)
    ASSIGN_SHIFTRIGHT reduce using rule 90 (primary_expression -> subscript_access .)
    SEMICOLON       reduce using rule 90 (primary_expression -> subscript_access .)
    RPAREN          reduce using rule 90 (primary_expression -> subscript_access .)
    COMMA           reduce using rule 90 (primary_expression -> subscript_access .)
    RBRACKET        reduce using rule 90 (primary_expression -> subscript_access .)


state 61

    (46) break_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 92


state 62

    (85) expression -> BITNOT . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 93
    call_expression                shift and go to state 70

state 63

    (47) continue_statement -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 94


state 64

    (108) real_constant -> REAL .

    DOT             reduce using rule 108 (real_constant -> REAL .)
    LBRACKET        reduce using rule 108 (real_constant -> REAL .)
    LPAREN          reduce using rule 108 (real_constant -> REAL .)
    PLUS            reduce using rule 108 (real_constant -> REAL .)
    MINUS           reduce using rule 108 (real_constant -> REAL .)
    MULTIPLY        reduce using rule 108 (real_constant -> REAL .)
    DIVIDE          reduce using rule 108 (real_constant -> REAL .)
    REMAINDER       reduce using rule 108 (real_constant -> REAL .)
    LT              reduce using rule 108 (real_constant -> REAL .)
    LE              reduce using rule 108 (real_constant -> REAL .)
    EQ              reduce using rule 108 (real_constant -> REAL .)
    NE              reduce using rule 108 (real_constant -> REAL .)
    GT              reduce using rule 108 (real_constant -> REAL .)
    GE              reduce using rule 108 (real_constant -> REAL .)
    LAND            reduce using rule 108 (real_constant -> REAL .)
    LOR             reduce using rule 108 (real_constant -> REAL .)
    BITAND          reduce using rule 108 (real_constant -> REAL .)
    BITOR           reduce using rule 108 (real_constant -> REAL .)
    BITXOR          reduce using rule 108 (real_constant -> REAL .)
    SHIFTLEFT       reduce using rule 108 (real_constant -> REAL .)
    SHIFTRIGHT      reduce using rule 108 (real_constant -> REAL .)
    ASSIGN          reduce using rule 108 (real_constant -> REAL .)
    ASSIGN_PLUS     reduce using rule 108 (real_constant -> REAL .)
    ASSIGN_MINUS    reduce using rule 108 (real_constant -> REAL .)
    ASSIGN_MULTIPLY reduce using rule 108 (real_constant -> REAL .)
    ASSIGN_DIVIDE   reduce using rule 108 (real_constant -> REAL .)
    ASSIGN_REMAINDER reduce using rule 108 (real_constant -> REAL .)
    ASSIGN_BITOR    reduce using rule 108 (real_constant -> REAL .)
    ASSIGN_BITAND   reduce using rule 108 (real_constant -> REAL .)
    ASSIGN_BITXOR   reduce using rule 108 (real_constant -> REAL .)
    ASSIGN_SHIFTLEFT reduce using rule 108 (real_constant -> REAL .)
    ASSIGN_SHIFTRIGHT reduce using rule 108 (real_constant -> REAL .)
    SEMICOLON       reduce using rule 108 (real_constant -> REAL .)
    RPAREN          reduce using rule 108 (real_constant -> REAL .)
    COMMA           reduce using rule 108 (real_constant -> REAL .)
    RBRACKET        reduce using rule 108 (real_constant -> REAL .)


state 65

    (103) constant -> real_constant .

    DOT             reduce using rule 103 (constant -> real_constant .)
    LBRACKET        reduce using rule 103 (constant -> real_constant .)
    LPAREN          reduce using rule 103 (constant -> real_constant .)
    PLUS            reduce using rule 103 (constant -> real_constant .)
    MINUS           reduce using rule 103 (constant -> real_constant .)
    MULTIPLY        reduce using rule 103 (constant -> real_constant .)
    DIVIDE          reduce using rule 103 (constant -> real_constant .)
    REMAINDER       reduce using rule 103 (constant -> real_constant .)
    LT              reduce using rule 103 (constant -> real_constant .)
    LE              reduce using rule 103 (constant -> real_constant .)
    EQ              reduce using rule 103 (constant -> real_constant .)
    NE              reduce using rule 103 (constant -> real_constant .)
    GT              reduce using rule 103 (constant -> real_constant .)
    GE              reduce using rule 103 (constant -> real_constant .)
    LAND            reduce using rule 103 (constant -> real_constant .)
    LOR             reduce using rule 103 (constant -> real_constant .)
    BITAND          reduce using rule 103 (constant -> real_constant .)
    BITOR           reduce using rule 103 (constant -> real_constant .)
    BITXOR          reduce using rule 103 (constant -> real_constant .)
    SHIFTLEFT       reduce using rule 103 (constant -> real_constant .)
    SHIFTRIGHT      reduce using rule 103 (constant -> real_constant .)
    ASSIGN          reduce using rule 103 (constant -> real_constant .)
    ASSIGN_PLUS     reduce using rule 103 (constant -> real_constant .)
    ASSIGN_MINUS    reduce using rule 103 (constant -> real_constant .)
    ASSIGN_MULTIPLY reduce using rule 103 (constant -> real_constant .)
    ASSIGN_DIVIDE   reduce using rule 103 (constant -> real_constant .)
    ASSIGN_REMAINDER reduce using rule 103 (constant -> real_constant .)
    ASSIGN_BITOR    reduce using rule 103 (constant -> real_constant .)
    ASSIGN_BITAND   reduce using rule 103 (constant -> real_constant .)
    ASSIGN_BITXOR   reduce using rule 103 (constant -> real_constant .)
    ASSIGN_SHIFTLEFT reduce using rule 103 (constant -> real_constant .)
    ASSIGN_SHIFTRIGHT reduce using rule 103 (constant -> real_constant .)
    SEMICOLON       reduce using rule 103 (constant -> real_constant .)
    RPAREN          reduce using rule 103 (constant -> real_constant .)
    COMMA           reduce using rule 103 (constant -> real_constant .)
    RBRACKET        reduce using rule 103 (constant -> real_constant .)


state 66

    (109) string_literal -> STRING .

    DOT             reduce using rule 109 (string_literal -> STRING .)
    LBRACKET        reduce using rule 109 (string_literal -> STRING .)
    LPAREN          reduce using rule 109 (string_literal -> STRING .)
    SEMICOLON       reduce using rule 109 (string_literal -> STRING .)
    PLUS            reduce using rule 109 (string_literal -> STRING .)
    MINUS           reduce using rule 109 (string_literal -> STRING .)
    MULTIPLY        reduce using rule 109 (string_literal -> STRING .)
    DIVIDE          reduce using rule 109 (string_literal -> STRING .)
    REMAINDER       reduce using rule 109 (string_literal -> STRING .)
    LT              reduce using rule 109 (string_literal -> STRING .)
    LE              reduce using rule 109 (string_literal -> STRING .)
    EQ              reduce using rule 109 (string_literal -> STRING .)
    NE              reduce using rule 109 (string_literal -> STRING .)
    GT              reduce using rule 109 (string_literal -> STRING .)
    GE              reduce using rule 109 (string_literal -> STRING .)
    LAND            reduce using rule 109 (string_literal -> STRING .)
    LOR             reduce using rule 109 (string_literal -> STRING .)
    BITAND          reduce using rule 109 (string_literal -> STRING .)
    BITOR           reduce using rule 109 (string_literal -> STRING .)
    BITXOR          reduce using rule 109 (string_literal -> STRING .)
    SHIFTLEFT       reduce using rule 109 (string_literal -> STRING .)
    SHIFTRIGHT      reduce using rule 109 (string_literal -> STRING .)
    ASSIGN          reduce using rule 109 (string_literal -> STRING .)
    ASSIGN_PLUS     reduce using rule 109 (string_literal -> STRING .)
    ASSIGN_MINUS    reduce using rule 109 (string_literal -> STRING .)
    ASSIGN_MULTIPLY reduce using rule 109 (string_literal -> STRING .)
    ASSIGN_DIVIDE   reduce using rule 109 (string_literal -> STRING .)
    ASSIGN_REMAINDER reduce using rule 109 (string_literal -> STRING .)
    ASSIGN_BITOR    reduce using rule 109 (string_literal -> STRING .)
    ASSIGN_BITAND   reduce using rule 109 (string_literal -> STRING .)
    ASSIGN_BITXOR   reduce using rule 109 (string_literal -> STRING .)
    ASSIGN_SHIFTLEFT reduce using rule 109 (string_literal -> STRING .)
    ASSIGN_SHIFTRIGHT reduce using rule 109 (string_literal -> STRING .)
    RPAREN          reduce using rule 109 (string_literal -> STRING .)
    COMMA           reduce using rule 109 (string_literal -> STRING .)
    RBRACKET        reduce using rule 109 (string_literal -> STRING .)


state 67

    (24) statement -> null_statement .

    RCBRACKET       reduce using rule 24 (statement -> null_statement .)
    SEMICOLON       reduce using rule 24 (statement -> null_statement .)
    LCBRACKET       reduce using rule 24 (statement -> null_statement .)
    IF              reduce using rule 24 (statement -> null_statement .)
    WHILE           reduce using rule 24 (statement -> null_statement .)
    DO              reduce using rule 24 (statement -> null_statement .)
    BREAK           reduce using rule 24 (statement -> null_statement .)
    CONTINUE        reduce using rule 24 (statement -> null_statement .)
    DISCARD         reduce using rule 24 (statement -> null_statement .)
    RETURN          reduce using rule 24 (statement -> null_statement .)
    PLUS            reduce using rule 24 (statement -> null_statement .)
    MINUS           reduce using rule 24 (statement -> null_statement .)
    LNOT            reduce using rule 24 (statement -> null_statement .)
    BITNOT          reduce using rule 24 (statement -> null_statement .)
    TYPE            reduce using rule 24 (statement -> null_statement .)
    IDENTIFIER      reduce using rule 24 (statement -> null_statement .)
    LPAREN          reduce using rule 24 (statement -> null_statement .)
    INTEGER         reduce using rule 24 (statement -> null_statement .)
    TRUE            reduce using rule 24 (statement -> null_statement .)
    FALSE           reduce using rule 24 (statement -> null_statement .)
    REAL            reduce using rule 24 (statement -> null_statement .)
    STRING          reduce using rule 24 (statement -> null_statement .)
    ELSE            reduce using rule 24 (statement -> null_statement .)


state 68

    (51) expression_statement -> expression . SEMICOLON
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       shift and go to state 105
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99


state 69

    (31) statement -> discard_statement .

    RCBRACKET       reduce using rule 31 (statement -> discard_statement .)
    SEMICOLON       reduce using rule 31 (statement -> discard_statement .)
    LCBRACKET       reduce using rule 31 (statement -> discard_statement .)
    IF              reduce using rule 31 (statement -> discard_statement .)
    WHILE           reduce using rule 31 (statement -> discard_statement .)
    DO              reduce using rule 31 (statement -> discard_statement .)
    BREAK           reduce using rule 31 (statement -> discard_statement .)
    CONTINUE        reduce using rule 31 (statement -> discard_statement .)
    DISCARD         reduce using rule 31 (statement -> discard_statement .)
    RETURN          reduce using rule 31 (statement -> discard_statement .)
    PLUS            reduce using rule 31 (statement -> discard_statement .)
    MINUS           reduce using rule 31 (statement -> discard_statement .)
    LNOT            reduce using rule 31 (statement -> discard_statement .)
    BITNOT          reduce using rule 31 (statement -> discard_statement .)
    TYPE            reduce using rule 31 (statement -> discard_statement .)
    IDENTIFIER      reduce using rule 31 (statement -> discard_statement .)
    LPAREN          reduce using rule 31 (statement -> discard_statement .)
    INTEGER         reduce using rule 31 (statement -> discard_statement .)
    TRUE            reduce using rule 31 (statement -> discard_statement .)
    FALSE           reduce using rule 31 (statement -> discard_statement .)
    REAL            reduce using rule 31 (statement -> discard_statement .)
    STRING          reduce using rule 31 (statement -> discard_statement .)
    ELSE            reduce using rule 31 (statement -> discard_statement .)


state 70

    (91) primary_expression -> call_expression .

    DOT             reduce using rule 91 (primary_expression -> call_expression .)
    LBRACKET        reduce using rule 91 (primary_expression -> call_expression .)
    LPAREN          reduce using rule 91 (primary_expression -> call_expression .)
    PLUS            reduce using rule 91 (primary_expression -> call_expression .)
    MINUS           reduce using rule 91 (primary_expression -> call_expression .)
    MULTIPLY        reduce using rule 91 (primary_expression -> call_expression .)
    DIVIDE          reduce using rule 91 (primary_expression -> call_expression .)
    REMAINDER       reduce using rule 91 (primary_expression -> call_expression .)
    LT              reduce using rule 91 (primary_expression -> call_expression .)
    LE              reduce using rule 91 (primary_expression -> call_expression .)
    EQ              reduce using rule 91 (primary_expression -> call_expression .)
    NE              reduce using rule 91 (primary_expression -> call_expression .)
    GT              reduce using rule 91 (primary_expression -> call_expression .)
    GE              reduce using rule 91 (primary_expression -> call_expression .)
    LAND            reduce using rule 91 (primary_expression -> call_expression .)
    LOR             reduce using rule 91 (primary_expression -> call_expression .)
    BITAND          reduce using rule 91 (primary_expression -> call_expression .)
    BITOR           reduce using rule 91 (primary_expression -> call_expression .)
    BITXOR          reduce using rule 91 (primary_expression -> call_expression .)
    SHIFTLEFT       reduce using rule 91 (primary_expression -> call_expression .)
    SHIFTRIGHT      reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN          reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN_PLUS     reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN_MINUS    reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN_MULTIPLY reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN_DIVIDE   reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN_REMAINDER reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN_BITOR    reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN_BITAND   reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN_BITXOR   reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN_SHIFTLEFT reduce using rule 91 (primary_expression -> call_expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 91 (primary_expression -> call_expression .)
    SEMICOLON       reduce using rule 91 (primary_expression -> call_expression .)
    RPAREN          reduce using rule 91 (primary_expression -> call_expression .)
    COMMA           reduce using rule 91 (primary_expression -> call_expression .)
    RBRACKET        reduce using rule 91 (primary_expression -> call_expression .)


state 71

    (35) variables_declaration -> type_expr . variables_names SEMICOLON
    (36) variables_names -> . variable_name
    (37) variables_names -> . variables_names COMMA variable_name
    (38) variable_name -> . IDENTIFIER
    (39) variable_name -> . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 127

    variables_names                shift and go to state 125
    variable_name                  shift and go to state 126

state 72

    (114) struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET . struct_fields RCBRACKET SEMICOLON
    (115) struct_fields -> . struct_fields struct_field
    (116) struct_fields -> .

    RCBRACKET       reduce using rule 116 (struct_fields -> .)
    TYPE            reduce using rule 116 (struct_fields -> .)
    LBRACKET        reduce using rule 116 (struct_fields -> .)

    struct_fields                  shift and go to state 128

state 73

    (120) attribute -> LBRACKET IDENTIFIER attribute_arguments . RBRACKET

    RBRACKET        shift and go to state 129


state 74

    (122) attribute_arguments -> LPAREN . call_arguments RPAREN
    (96) call_arguments -> . call_arguments_empty
    (97) call_arguments -> . call_arguments_nonempty
    (98) call_arguments_empty -> .
    (99) call_arguments_nonempty -> . expression
    (100) call_arguments_nonempty -> . call_arguments_nonempty COMMA expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    RPAREN          reduce using rule 98 (call_arguments_empty -> .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    call_arguments                 shift and go to state 130
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    integer_constant               shift and go to state 31
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    call_arguments_empty           shift and go to state 131
    identifier                     shift and go to state 79
    expression                     shift and go to state 133
    call_expression                shift and go to state 70
    call_arguments_nonempty        shift and go to state 132

state 75

    (19) function_prototype -> function_kind type_expr IDENTIFIER LPAREN . prototype_arguments RPAREN
    (9) prototype_arguments -> . prototype_arguments_empty
    (10) prototype_arguments -> . prototype_arguments_nonempty
    (11) prototype_arguments_empty -> .
    (12) prototype_arguments_nonempty -> . prototype_argument
    (13) prototype_arguments_nonempty -> . prototype_arguments_nonempty COMMA prototype_argument
    (14) prototype_argument -> . argument_pass_type type_expr IDENTIFIER
    (15) argument_pass_type -> .
    (16) argument_pass_type -> . IN
    (17) argument_pass_type -> . OUT
    (18) argument_pass_type -> . INOUT

    RPAREN          reduce using rule 11 (prototype_arguments_empty -> .)
    TYPE            reduce using rule 15 (argument_pass_type -> .)
    IDENTIFIER      reduce using rule 15 (argument_pass_type -> .)
    IN              shift and go to state 135
    OUT             shift and go to state 141
    INOUT           shift and go to state 140

    argument_pass_type             shift and go to state 137
    prototype_arguments_nonempty   shift and go to state 134
    prototype_arguments            shift and go to state 136
    prototype_argument             shift and go to state 138
    prototype_arguments_empty      shift and go to state 139

state 76

    (8) function_kind -> KERNEL LPAREN IDENTIFIER RPAREN .

    TYPE            reduce using rule 8 (function_kind -> KERNEL LPAREN IDENTIFIER RPAREN .)
    IDENTIFIER      reduce using rule 8 (function_kind -> KERNEL LPAREN IDENTIFIER RPAREN .)


state 77

    (45) do_while_statement -> DO statement . WHILE LPAREN expression RPAREN

    WHILE           shift and go to state 142


state 78

    (84) expression -> LNOT expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    PLUS            reduce using rule 84 (expression -> LNOT expression .)
    MINUS           reduce using rule 84 (expression -> LNOT expression .)
    MULTIPLY        reduce using rule 84 (expression -> LNOT expression .)
    DIVIDE          reduce using rule 84 (expression -> LNOT expression .)
    REMAINDER       reduce using rule 84 (expression -> LNOT expression .)
    LT              reduce using rule 84 (expression -> LNOT expression .)
    LE              reduce using rule 84 (expression -> LNOT expression .)
    EQ              reduce using rule 84 (expression -> LNOT expression .)
    NE              reduce using rule 84 (expression -> LNOT expression .)
    GT              reduce using rule 84 (expression -> LNOT expression .)
    GE              reduce using rule 84 (expression -> LNOT expression .)
    LAND            reduce using rule 84 (expression -> LNOT expression .)
    LOR             reduce using rule 84 (expression -> LNOT expression .)
    BITAND          reduce using rule 84 (expression -> LNOT expression .)
    BITOR           reduce using rule 84 (expression -> LNOT expression .)
    BITXOR          reduce using rule 84 (expression -> LNOT expression .)
    SHIFTLEFT       reduce using rule 84 (expression -> LNOT expression .)
    SHIFTRIGHT      reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN          reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN_PLUS     reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN_MINUS    reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN_MULTIPLY reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN_DIVIDE   reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN_REMAINDER reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN_BITOR    reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN_BITAND   reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN_BITXOR   reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN_SHIFTLEFT reduce using rule 84 (expression -> LNOT expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 84 (expression -> LNOT expression .)
    SEMICOLON       reduce using rule 84 (expression -> LNOT expression .)
    RPAREN          reduce using rule 84 (expression -> LNOT expression .)
    COMMA           reduce using rule 84 (expression -> LNOT expression .)
    RBRACKET        reduce using rule 84 (expression -> LNOT expression .)

  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 102 ]
  ! MULTIPLY        [ shift and go to state 101 ]
  ! DIVIDE          [ shift and go to state 114 ]
  ! REMAINDER       [ shift and go to state 123 ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 79

    (87) primary_expression -> identifier .

    DOT             reduce using rule 87 (primary_expression -> identifier .)
    LBRACKET        reduce using rule 87 (primary_expression -> identifier .)
    LPAREN          reduce using rule 87 (primary_expression -> identifier .)
    PLUS            reduce using rule 87 (primary_expression -> identifier .)
    MINUS           reduce using rule 87 (primary_expression -> identifier .)
    MULTIPLY        reduce using rule 87 (primary_expression -> identifier .)
    DIVIDE          reduce using rule 87 (primary_expression -> identifier .)
    REMAINDER       reduce using rule 87 (primary_expression -> identifier .)
    LT              reduce using rule 87 (primary_expression -> identifier .)
    LE              reduce using rule 87 (primary_expression -> identifier .)
    EQ              reduce using rule 87 (primary_expression -> identifier .)
    NE              reduce using rule 87 (primary_expression -> identifier .)
    GT              reduce using rule 87 (primary_expression -> identifier .)
    GE              reduce using rule 87 (primary_expression -> identifier .)
    LAND            reduce using rule 87 (primary_expression -> identifier .)
    LOR             reduce using rule 87 (primary_expression -> identifier .)
    BITAND          reduce using rule 87 (primary_expression -> identifier .)
    BITOR           reduce using rule 87 (primary_expression -> identifier .)
    BITXOR          reduce using rule 87 (primary_expression -> identifier .)
    SHIFTLEFT       reduce using rule 87 (primary_expression -> identifier .)
    SHIFTRIGHT      reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN          reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_PLUS     reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_MINUS    reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_MULTIPLY reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_DIVIDE   reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_REMAINDER reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_BITOR    reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_BITAND   reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_BITXOR   reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_SHIFTLEFT reduce using rule 87 (primary_expression -> identifier .)
    ASSIGN_SHIFTRIGHT reduce using rule 87 (primary_expression -> identifier .)
    SEMICOLON       reduce using rule 87 (primary_expression -> identifier .)
    RPAREN          reduce using rule 87 (primary_expression -> identifier .)
    COMMA           reduce using rule 87 (primary_expression -> identifier .)
    RBRACKET        reduce using rule 87 (primary_expression -> identifier .)


state 80

    (49) return_statement -> RETURN SEMICOLON .

    RCBRACKET       reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    LCBRACKET       reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    DO              reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    BREAK           reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    CONTINUE        reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    DISCARD         reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    PLUS            reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    MINUS           reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    LNOT            reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    BITNOT          reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    TYPE            reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    INTEGER         reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    TRUE            reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    FALSE           reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    REAL            reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 49 (return_statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 49 (return_statement -> RETURN SEMICOLON .)


state 81

    (50) return_statement -> RETURN expression . SEMICOLON
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       shift and go to state 143
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99


state 82

    (44) while_statement -> WHILE LPAREN . expression RPAREN statement
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    real_constant                  shift and go to state 65
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 144
    call_expression                shift and go to state 70
    string_literal                 shift and go to state 35

state 83

    (48) discard_statement -> DISCARD SEMICOLON .

    RCBRACKET       reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    SEMICOLON       reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    LCBRACKET       reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    IF              reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    WHILE           reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    DO              reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    BREAK           reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    CONTINUE        reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    DISCARD         reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    RETURN          reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    PLUS            reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    MINUS           reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    LNOT            reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    BITNOT          reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    TYPE            reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    IDENTIFIER      reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    LPAREN          reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    INTEGER         reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    TRUE            reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    FALSE           reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    REAL            reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    STRING          reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)
    ELSE            reduce using rule 48 (discard_statement -> DISCARD SEMICOLON .)


state 84

    (83) expression -> MINUS expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    PLUS            reduce using rule 83 (expression -> MINUS expression .)
    MINUS           reduce using rule 83 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 83 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 83 (expression -> MINUS expression .)
    REMAINDER       reduce using rule 83 (expression -> MINUS expression .)
    LT              reduce using rule 83 (expression -> MINUS expression .)
    LE              reduce using rule 83 (expression -> MINUS expression .)
    EQ              reduce using rule 83 (expression -> MINUS expression .)
    NE              reduce using rule 83 (expression -> MINUS expression .)
    GT              reduce using rule 83 (expression -> MINUS expression .)
    GE              reduce using rule 83 (expression -> MINUS expression .)
    LAND            reduce using rule 83 (expression -> MINUS expression .)
    LOR             reduce using rule 83 (expression -> MINUS expression .)
    BITAND          reduce using rule 83 (expression -> MINUS expression .)
    BITOR           reduce using rule 83 (expression -> MINUS expression .)
    BITXOR          reduce using rule 83 (expression -> MINUS expression .)
    SHIFTLEFT       reduce using rule 83 (expression -> MINUS expression .)
    SHIFTRIGHT      reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN          reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN_PLUS     reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN_MINUS    reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN_MULTIPLY reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN_DIVIDE   reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN_REMAINDER reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN_BITOR    reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN_BITAND   reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN_BITXOR   reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN_SHIFTLEFT reduce using rule 83 (expression -> MINUS expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 83 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 83 (expression -> MINUS expression .)
    RPAREN          reduce using rule 83 (expression -> MINUS expression .)
    COMMA           reduce using rule 83 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 83 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 102 ]
  ! MULTIPLY        [ shift and go to state 101 ]
  ! DIVIDE          [ shift and go to state 114 ]
  ! REMAINDER       [ shift and go to state 123 ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 85

    (82) expression -> PLUS expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    PLUS            reduce using rule 82 (expression -> PLUS expression .)
    MINUS           reduce using rule 82 (expression -> PLUS expression .)
    MULTIPLY        reduce using rule 82 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 82 (expression -> PLUS expression .)
    REMAINDER       reduce using rule 82 (expression -> PLUS expression .)
    LT              reduce using rule 82 (expression -> PLUS expression .)
    LE              reduce using rule 82 (expression -> PLUS expression .)
    EQ              reduce using rule 82 (expression -> PLUS expression .)
    NE              reduce using rule 82 (expression -> PLUS expression .)
    GT              reduce using rule 82 (expression -> PLUS expression .)
    GE              reduce using rule 82 (expression -> PLUS expression .)
    LAND            reduce using rule 82 (expression -> PLUS expression .)
    LOR             reduce using rule 82 (expression -> PLUS expression .)
    BITAND          reduce using rule 82 (expression -> PLUS expression .)
    BITOR           reduce using rule 82 (expression -> PLUS expression .)
    BITXOR          reduce using rule 82 (expression -> PLUS expression .)
    SHIFTLEFT       reduce using rule 82 (expression -> PLUS expression .)
    SHIFTRIGHT      reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN          reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN_PLUS     reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN_MINUS    reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN_MULTIPLY reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN_DIVIDE   reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN_REMAINDER reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN_BITOR    reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN_BITAND   reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN_BITXOR   reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN_SHIFTLEFT reduce using rule 82 (expression -> PLUS expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 82 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 82 (expression -> PLUS expression .)
    RPAREN          reduce using rule 82 (expression -> PLUS expression .)
    COMMA           reduce using rule 82 (expression -> PLUS expression .)
    RBRACKET        reduce using rule 82 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 102 ]
  ! MULTIPLY        [ shift and go to state 101 ]
  ! DIVIDE          [ shift and go to state 114 ]
  ! REMAINDER       [ shift and go to state 123 ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 86

    (94) subscript_access -> primary_expression LBRACKET . expression RBRACKET
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 145
    call_expression                shift and go to state 70

state 87

    (95) call_expression -> primary_expression LPAREN . call_arguments RPAREN
    (96) call_arguments -> . call_arguments_empty
    (97) call_arguments -> . call_arguments_nonempty
    (98) call_arguments_empty -> .
    (99) call_arguments_nonempty -> . expression
    (100) call_arguments_nonempty -> . call_arguments_nonempty COMMA expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    RPAREN          reduce using rule 98 (call_arguments_empty -> .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    call_arguments                 shift and go to state 146
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    integer_constant               shift and go to state 31
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    call_arguments_empty           shift and go to state 131
    identifier                     shift and go to state 79
    expression                     shift and go to state 133
    call_expression                shift and go to state 70
    call_arguments_nonempty        shift and go to state 132

state 88

    (93) member_access -> primary_expression DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 147


state 89

    (92) parenthesis_expression -> LPAREN expression . RPAREN
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    RPAREN          shift and go to state 148
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99


state 90

    (41) block_statement -> LCBRACKET statement_list . RCBRACKET
    (23) statement_list -> statement_list . statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . if_statement
    (27) statement -> . while_statement
    (28) statement -> . do_while_statement
    (29) statement -> . break_statement
    (30) statement -> . continue_statement
    (31) statement -> . discard_statement
    (32) statement -> . return_statement
    (33) statement -> . variables_declaration
    (34) statement -> . expression_statement
    (40) null_statement -> . SEMICOLON
    (41) block_statement -> . LCBRACKET statement_list RCBRACKET
    (42) if_statement -> . IF LPAREN expression RPAREN statement
    (43) if_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (44) while_statement -> . WHILE LPAREN expression RPAREN statement
    (45) do_while_statement -> . DO statement WHILE LPAREN expression RPAREN
    (46) break_statement -> . BREAK SEMICOLON
    (47) continue_statement -> . CONTINUE SEMICOLON
    (48) discard_statement -> . DISCARD SEMICOLON
    (49) return_statement -> . RETURN SEMICOLON
    (50) return_statement -> . RETURN expression SEMICOLON
    (35) variables_declaration -> . type_expr variables_names SEMICOLON
    (51) expression_statement -> . expression SEMICOLON
    (110) type_expr -> . type
    (111) type_expr -> . identifier
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (112) type -> . TYPE
    (113) identifier -> . IDENTIFIER
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    RCBRACKET       shift and go to state 149
    SEMICOLON       shift and go to state 39
    LCBRACKET       shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 33
    DO              shift and go to state 28
    BREAK           shift and go to state 61
    CONTINUE        shift and go to state 63
    DISCARD         shift and go to state 34
    RETURN          shift and go to state 30
    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    TYPE            shift and go to state 17
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    expression_statement           shift and go to state 27
    constant                       shift and go to state 49
    integer_constant               shift and go to state 31
    break_statement                shift and go to state 32
    string_literal                 shift and go to state 35
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    block_statement                shift and go to state 41
    return_statement               shift and go to state 42
    while_statement                shift and go to state 43
    continue_statement             shift and go to state 44
    statement                      shift and go to state 46
    boolean_constant               shift and go to state 47
    if_statement                   shift and go to state 50
    type                           shift and go to state 20
    do_while_statement             shift and go to state 52
    variables_declaration          shift and go to state 58
    primary_expression             shift and go to state 53
    null_statement                 shift and go to state 67
    subscript_access               shift and go to state 60
    type_expr                      shift and go to state 71
    real_constant                  shift and go to state 65
    identifier                     shift and go to state 51
    expression                     shift and go to state 68
    discard_statement              shift and go to state 69
    call_expression                shift and go to state 70

state 91

    (42) if_statement -> IF LPAREN . expression RPAREN statement
    (43) if_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    real_constant                  shift and go to state 65
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 150
    call_expression                shift and go to state 70
    string_literal                 shift and go to state 35

state 92

    (46) break_statement -> BREAK SEMICOLON .

    WHILE           reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    RCBRACKET       reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    SEMICOLON       reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    LCBRACKET       reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    IF              reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    DO              reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    DISCARD         reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    PLUS            reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    MINUS           reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    LNOT            reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    BITNOT          reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    TYPE            reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    INTEGER         reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    TRUE            reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    FALSE           reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    REAL            reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    STRING          reduce using rule 46 (break_statement -> BREAK SEMICOLON .)
    ELSE            reduce using rule 46 (break_statement -> BREAK SEMICOLON .)


state 93

    (85) expression -> BITNOT expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    PLUS            reduce using rule 85 (expression -> BITNOT expression .)
    MINUS           reduce using rule 85 (expression -> BITNOT expression .)
    MULTIPLY        reduce using rule 85 (expression -> BITNOT expression .)
    DIVIDE          reduce using rule 85 (expression -> BITNOT expression .)
    REMAINDER       reduce using rule 85 (expression -> BITNOT expression .)
    LT              reduce using rule 85 (expression -> BITNOT expression .)
    LE              reduce using rule 85 (expression -> BITNOT expression .)
    EQ              reduce using rule 85 (expression -> BITNOT expression .)
    NE              reduce using rule 85 (expression -> BITNOT expression .)
    GT              reduce using rule 85 (expression -> BITNOT expression .)
    GE              reduce using rule 85 (expression -> BITNOT expression .)
    LAND            reduce using rule 85 (expression -> BITNOT expression .)
    LOR             reduce using rule 85 (expression -> BITNOT expression .)
    BITAND          reduce using rule 85 (expression -> BITNOT expression .)
    BITOR           reduce using rule 85 (expression -> BITNOT expression .)
    BITXOR          reduce using rule 85 (expression -> BITNOT expression .)
    SHIFTLEFT       reduce using rule 85 (expression -> BITNOT expression .)
    SHIFTRIGHT      reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN          reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN_PLUS     reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN_MINUS    reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN_MULTIPLY reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN_DIVIDE   reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN_REMAINDER reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN_BITOR    reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN_BITAND   reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN_BITXOR   reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN_SHIFTLEFT reduce using rule 85 (expression -> BITNOT expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 85 (expression -> BITNOT expression .)
    SEMICOLON       reduce using rule 85 (expression -> BITNOT expression .)
    RPAREN          reduce using rule 85 (expression -> BITNOT expression .)
    COMMA           reduce using rule 85 (expression -> BITNOT expression .)
    RBRACKET        reduce using rule 85 (expression -> BITNOT expression .)

  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 102 ]
  ! MULTIPLY        [ shift and go to state 101 ]
  ! DIVIDE          [ shift and go to state 114 ]
  ! REMAINDER       [ shift and go to state 123 ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 94

    (47) continue_statement -> CONTINUE SEMICOLON .

    RCBRACKET       reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    SEMICOLON       reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    LCBRACKET       reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    IF              reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    DO              reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    DISCARD         reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    PLUS            reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    MINUS           reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    LNOT            reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    BITNOT          reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    TYPE            reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    IDENTIFIER      reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    LPAREN          reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    INTEGER         reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    TRUE            reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    FALSE           reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    REAL            reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    STRING          reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)
    ELSE            reduce using rule 47 (continue_statement -> CONTINUE SEMICOLON .)


state 95

    (75) expression -> expression ASSIGN_DIVIDE . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 151
    call_expression                shift and go to state 70

state 96

    (79) expression -> expression ASSIGN_BITXOR . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 152
    call_expression                shift and go to state 70

state 97

    (73) expression -> expression ASSIGN_MINUS . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 153
    call_expression                shift and go to state 70

state 98

    (65) expression -> expression LOR . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 154
    call_expression                shift and go to state 70

state 99

    (81) expression -> expression ASSIGN_SHIFTRIGHT . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 155
    call_expression                shift and go to state 70

state 100

    (68) expression -> expression BITXOR . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 156
    call_expression                shift and go to state 70

state 101

    (55) expression -> expression MULTIPLY . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 157
    call_expression                shift and go to state 70

state 102

    (54) expression -> expression MINUS . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 158
    call_expression                shift and go to state 70

state 103

    (72) expression -> expression ASSIGN_PLUS . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 159
    call_expression                shift and go to state 70

state 104

    (59) expression -> expression LE . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 160
    call_expression                shift and go to state 70

state 105

    (51) expression_statement -> expression SEMICOLON .

    RCBRACKET       reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    SEMICOLON       reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    LCBRACKET       reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    IF              reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    WHILE           reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    DO              reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    BREAK           reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    CONTINUE        reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    DISCARD         reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    RETURN          reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    PLUS            reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    MINUS           reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    LNOT            reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    BITNOT          reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    TYPE            reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    INTEGER         reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    TRUE            reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    FALSE           reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    REAL            reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    STRING          reduce using rule 51 (expression_statement -> expression SEMICOLON .)
    ELSE            reduce using rule 51 (expression_statement -> expression SEMICOLON .)


state 106

    (61) expression -> expression NE . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 161
    call_expression                shift and go to state 70

state 107

    (77) expression -> expression ASSIGN_BITOR . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 162
    call_expression                shift and go to state 70

state 108

    (58) expression -> expression LT . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 163
    call_expression                shift and go to state 70

state 109

    (53) expression -> expression PLUS . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 164
    call_expression                shift and go to state 70

state 110

    (67) expression -> expression BITOR . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 165
    call_expression                shift and go to state 70

state 111

    (71) expression -> expression ASSIGN . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 166
    call_expression                shift and go to state 70

state 112

    (74) expression -> expression ASSIGN_MULTIPLY . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 167
    call_expression                shift and go to state 70

state 113

    (62) expression -> expression GT . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 168
    call_expression                shift and go to state 70

state 114

    (56) expression -> expression DIVIDE . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 169
    call_expression                shift and go to state 70

state 115

    (69) expression -> expression SHIFTLEFT . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 170
    call_expression                shift and go to state 70

state 116

    (70) expression -> expression SHIFTRIGHT . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 171
    call_expression                shift and go to state 70

state 117

    (66) expression -> expression BITAND . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 172
    call_expression                shift and go to state 70

state 118

    (64) expression -> expression LAND . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 173
    call_expression                shift and go to state 70

state 119

    (80) expression -> expression ASSIGN_SHIFTLEFT . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 174
    call_expression                shift and go to state 70

state 120

    (60) expression -> expression EQ . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 175
    call_expression                shift and go to state 70

state 121

    (76) expression -> expression ASSIGN_REMAINDER . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 176
    call_expression                shift and go to state 70

state 122

    (63) expression -> expression GE . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 177
    call_expression                shift and go to state 70

state 123

    (57) expression -> expression REMAINDER . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 178
    call_expression                shift and go to state 70

state 124

    (78) expression -> expression ASSIGN_BITAND . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 179
    call_expression                shift and go to state 70

state 125

    (35) variables_declaration -> type_expr variables_names . SEMICOLON
    (37) variables_names -> variables_names . COMMA variable_name

    SEMICOLON       shift and go to state 181
    COMMA           shift and go to state 180


state 126

    (36) variables_names -> variable_name .

    SEMICOLON       reduce using rule 36 (variables_names -> variable_name .)
    COMMA           reduce using rule 36 (variables_names -> variable_name .)


state 127

    (38) variable_name -> IDENTIFIER .
    (39) variable_name -> IDENTIFIER . ASSIGN expression

    SEMICOLON       reduce using rule 38 (variable_name -> IDENTIFIER .)
    COMMA           reduce using rule 38 (variable_name -> IDENTIFIER .)
    ASSIGN          shift and go to state 182


state 128

    (114) struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields . RCBRACKET SEMICOLON
    (115) struct_fields -> struct_fields . struct_field
    (117) struct_field -> . optional_attribute_list type IDENTIFIER SEMICOLON
    (118) optional_attribute_list -> .
    (119) optional_attribute_list -> . optional_attribute_list attribute

    RCBRACKET       shift and go to state 183
    TYPE            reduce using rule 118 (optional_attribute_list -> .)
    LBRACKET        reduce using rule 118 (optional_attribute_list -> .)

    optional_attribute_list        shift and go to state 184
    struct_field                   shift and go to state 185

state 129

    (120) attribute -> LBRACKET IDENTIFIER attribute_arguments RBRACKET .

    STRUCT          reduce using rule 120 (attribute -> LBRACKET IDENTIFIER attribute_arguments RBRACKET .)
    LBRACKET        reduce using rule 120 (attribute -> LBRACKET IDENTIFIER attribute_arguments RBRACKET .)
    TYPE            reduce using rule 120 (attribute -> LBRACKET IDENTIFIER attribute_arguments RBRACKET .)


state 130

    (122) attribute_arguments -> LPAREN call_arguments . RPAREN

    RPAREN          shift and go to state 186


state 131

    (96) call_arguments -> call_arguments_empty .

    RPAREN          reduce using rule 96 (call_arguments -> call_arguments_empty .)


state 132

    (97) call_arguments -> call_arguments_nonempty .
    (100) call_arguments_nonempty -> call_arguments_nonempty . COMMA expression

    RPAREN          reduce using rule 97 (call_arguments -> call_arguments_nonempty .)
    COMMA           shift and go to state 187


state 133

    (99) call_arguments_nonempty -> expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    COMMA           reduce using rule 99 (call_arguments_nonempty -> expression .)
    RPAREN          reduce using rule 99 (call_arguments_nonempty -> expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99


state 134

    (10) prototype_arguments -> prototype_arguments_nonempty .
    (13) prototype_arguments_nonempty -> prototype_arguments_nonempty . COMMA prototype_argument

    RPAREN          reduce using rule 10 (prototype_arguments -> prototype_arguments_nonempty .)
    COMMA           shift and go to state 188


state 135

    (16) argument_pass_type -> IN .

    TYPE            reduce using rule 16 (argument_pass_type -> IN .)
    IDENTIFIER      reduce using rule 16 (argument_pass_type -> IN .)


state 136

    (19) function_prototype -> function_kind type_expr IDENTIFIER LPAREN prototype_arguments . RPAREN

    RPAREN          shift and go to state 189


state 137

    (14) prototype_argument -> argument_pass_type . type_expr IDENTIFIER
    (110) type_expr -> . type
    (111) type_expr -> . identifier
    (112) type -> . TYPE
    (113) identifier -> . IDENTIFIER

    TYPE            shift and go to state 17
    IDENTIFIER      shift and go to state 19

    type                           shift and go to state 20
    type_expr                      shift and go to state 190
    identifier                     shift and go to state 16

state 138

    (12) prototype_arguments_nonempty -> prototype_argument .

    COMMA           reduce using rule 12 (prototype_arguments_nonempty -> prototype_argument .)
    RPAREN          reduce using rule 12 (prototype_arguments_nonempty -> prototype_argument .)


state 139

    (9) prototype_arguments -> prototype_arguments_empty .

    RPAREN          reduce using rule 9 (prototype_arguments -> prototype_arguments_empty .)


state 140

    (18) argument_pass_type -> INOUT .

    TYPE            reduce using rule 18 (argument_pass_type -> INOUT .)
    IDENTIFIER      reduce using rule 18 (argument_pass_type -> INOUT .)


state 141

    (17) argument_pass_type -> OUT .

    TYPE            reduce using rule 17 (argument_pass_type -> OUT .)
    IDENTIFIER      reduce using rule 17 (argument_pass_type -> OUT .)


state 142

    (45) do_while_statement -> DO statement WHILE . LPAREN expression RPAREN

    LPAREN          shift and go to state 191


state 143

    (50) return_statement -> RETURN expression SEMICOLON .

    RCBRACKET       reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    SEMICOLON       reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    LCBRACKET       reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    DO              reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    CONTINUE        reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    DISCARD         reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    PLUS            reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    LNOT            reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    BITNOT          reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    TYPE            reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    INTEGER         reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    REAL            reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 50 (return_statement -> RETURN expression SEMICOLON .)


state 144

    (44) while_statement -> WHILE LPAREN expression . RPAREN statement
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    RPAREN          shift and go to state 192
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99


state 145

    (94) subscript_access -> primary_expression LBRACKET expression . RBRACKET
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    RBRACKET        shift and go to state 193
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99


state 146

    (95) call_expression -> primary_expression LPAREN call_arguments . RPAREN

    RPAREN          shift and go to state 194


state 147

    (93) member_access -> primary_expression DOT IDENTIFIER .

    DOT             reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    LBRACKET        reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    LPAREN          reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    PLUS            reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    MINUS           reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    DIVIDE          reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    REMAINDER       reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    LT              reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    LE              reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    EQ              reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    NE              reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    GT              reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    GE              reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    LAND            reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    LOR             reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    BITAND          reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    BITOR           reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    BITXOR          reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    SHIFTLEFT       reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    SHIFTRIGHT      reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN          reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN_PLUS     reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN_MINUS    reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN_MULTIPLY reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN_DIVIDE   reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN_REMAINDER reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN_BITOR    reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN_BITAND   reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN_BITXOR   reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN_SHIFTLEFT reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    ASSIGN_SHIFTRIGHT reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    RPAREN          reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    COMMA           reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)
    RBRACKET        reduce using rule 93 (member_access -> primary_expression DOT IDENTIFIER .)


state 148

    (92) parenthesis_expression -> LPAREN expression RPAREN .

    DOT             reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    REMAINDER       reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    LAND            reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    LOR             reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    BITAND          reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    BITOR           reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    BITXOR          reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    SHIFTLEFT       reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    SHIFTRIGHT      reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN_PLUS     reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN_MINUS    reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN_MULTIPLY reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN_DIVIDE   reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN_REMAINDER reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN_BITOR    reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN_BITAND   reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN_BITXOR   reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN_SHIFTLEFT reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    ASSIGN_SHIFTRIGHT reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 92 (parenthesis_expression -> LPAREN expression RPAREN .)


state 149

    (41) block_statement -> LCBRACKET statement_list RCBRACKET .

    RCBRACKET       reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    SEMICOLON       reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    LCBRACKET       reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    IF              reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    WHILE           reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    DO              reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    BREAK           reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    CONTINUE        reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    DISCARD         reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    RETURN          reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    PLUS            reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    MINUS           reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    LNOT            reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    BITNOT          reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    TYPE            reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    IDENTIFIER      reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    LPAREN          reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    INTEGER         reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    TRUE            reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    FALSE           reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    REAL            reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    STRING          reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)
    ELSE            reduce using rule 41 (block_statement -> LCBRACKET statement_list RCBRACKET .)


state 150

    (42) if_statement -> IF LPAREN expression . RPAREN statement
    (43) if_statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    RPAREN          shift and go to state 195
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99


state 151

    (75) expression -> expression ASSIGN_DIVIDE expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .)
    RPAREN          reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .)
    COMMA           reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .)
    RBRACKET        reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! MULTIPLY        [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! REMAINDER       [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! LT              [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! LE              [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! EQ              [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! NE              [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! GT              [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! GE              [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! LAND            [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! LOR             [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! BITAND          [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! BITOR           [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! BITXOR          [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! SHIFTLEFT       [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN          [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 75 (expression -> expression ASSIGN_DIVIDE expression .) ]


state 152

    (79) expression -> expression ASSIGN_BITXOR expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .)
    RPAREN          reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .)
    COMMA           reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .)
    RBRACKET        reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! MINUS           [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! MULTIPLY        [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! DIVIDE          [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! REMAINDER       [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! LT              [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! LE              [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! EQ              [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! NE              [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! GT              [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! GE              [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! LAND            [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! LOR             [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! BITAND          [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! BITOR           [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! BITXOR          [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! SHIFTLEFT       [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN          [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 79 (expression -> expression ASSIGN_BITXOR expression .) ]


state 153

    (73) expression -> expression ASSIGN_MINUS expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .)
    RPAREN          reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .)
    COMMA           reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .)
    RBRACKET        reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! MINUS           [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! REMAINDER       [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! LT              [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! LE              [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! EQ              [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! NE              [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! GT              [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! GE              [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! LAND            [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! LOR             [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! BITAND          [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! BITOR           [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! BITXOR          [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! SHIFTLEFT       [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN          [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 73 (expression -> expression ASSIGN_MINUS expression .) ]


state 154

    (65) expression -> expression LOR expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LOR             reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN          reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN_PLUS     reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN_MINUS    reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN_MULTIPLY reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN_DIVIDE   reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN_REMAINDER reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN_BITOR    reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN_BITAND   reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN_BITXOR   reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN_SHIFTLEFT reduce using rule 65 (expression -> expression LOR expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 65 (expression -> expression LOR expression .)
    SEMICOLON       reduce using rule 65 (expression -> expression LOR expression .)
    RPAREN          reduce using rule 65 (expression -> expression LOR expression .)
    COMMA           reduce using rule 65 (expression -> expression LOR expression .)
    RBRACKET        reduce using rule 65 (expression -> expression LOR expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! MINUS           [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! MULTIPLY        [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! DIVIDE          [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! REMAINDER       [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! LT              [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! LE              [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! EQ              [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! NE              [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! GT              [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! GE              [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! LAND            [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! BITAND          [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! BITOR           [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! BITXOR          [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! SHIFTLEFT       [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 65 (expression -> expression LOR expression .) ]
  ! LOR             [ shift and go to state 98 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 155

    (81) expression -> expression ASSIGN_SHIFTRIGHT expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .)
    RPAREN          reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .)
    COMMA           reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .)
    RBRACKET        reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! MINUS           [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! MULTIPLY        [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! DIVIDE          [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! REMAINDER       [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! LT              [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! LE              [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! EQ              [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! NE              [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! GT              [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! GE              [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! LAND            [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! LOR             [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! BITAND          [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! BITOR           [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! BITXOR          [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! SHIFTLEFT       [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN          [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 81 (expression -> expression ASSIGN_SHIFTRIGHT expression .) ]


state 156

    (68) expression -> expression BITXOR expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LAND            reduce using rule 68 (expression -> expression BITXOR expression .)
    LOR             reduce using rule 68 (expression -> expression BITXOR expression .)
    BITOR           reduce using rule 68 (expression -> expression BITXOR expression .)
    BITXOR          reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN          reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN_PLUS     reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN_MINUS    reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN_MULTIPLY reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN_DIVIDE   reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN_REMAINDER reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN_BITOR    reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN_BITAND   reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN_BITXOR   reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN_SHIFTLEFT reduce using rule 68 (expression -> expression BITXOR expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 68 (expression -> expression BITXOR expression .)
    SEMICOLON       reduce using rule 68 (expression -> expression BITXOR expression .)
    RPAREN          reduce using rule 68 (expression -> expression BITXOR expression .)
    COMMA           reduce using rule 68 (expression -> expression BITXOR expression .)
    RBRACKET        reduce using rule 68 (expression -> expression BITXOR expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    BITAND          shift and go to state 117
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! MINUS           [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! MULTIPLY        [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! DIVIDE          [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! REMAINDER       [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! LT              [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! LE              [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! EQ              [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! NE              [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! GT              [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! GE              [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! BITAND          [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! SHIFTLEFT       [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 68 (expression -> expression BITXOR expression .) ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 157

    (55) expression -> expression MULTIPLY expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    PLUS            reduce using rule 55 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 55 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 55 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 55 (expression -> expression MULTIPLY expression .)
    REMAINDER       reduce using rule 55 (expression -> expression MULTIPLY expression .)
    LT              reduce using rule 55 (expression -> expression MULTIPLY expression .)
    LE              reduce using rule 55 (expression -> expression MULTIPLY expression .)
    EQ              reduce using rule 55 (expression -> expression MULTIPLY expression .)
    NE              reduce using rule 55 (expression -> expression MULTIPLY expression .)
    GT              reduce using rule 55 (expression -> expression MULTIPLY expression .)
    GE              reduce using rule 55 (expression -> expression MULTIPLY expression .)
    LAND            reduce using rule 55 (expression -> expression MULTIPLY expression .)
    LOR             reduce using rule 55 (expression -> expression MULTIPLY expression .)
    BITAND          reduce using rule 55 (expression -> expression MULTIPLY expression .)
    BITOR           reduce using rule 55 (expression -> expression MULTIPLY expression .)
    BITXOR          reduce using rule 55 (expression -> expression MULTIPLY expression .)
    SHIFTLEFT       reduce using rule 55 (expression -> expression MULTIPLY expression .)
    SHIFTRIGHT      reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN          reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN_PLUS     reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN_MINUS    reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN_MULTIPLY reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN_DIVIDE   reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN_REMAINDER reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN_BITOR    reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN_BITAND   reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN_BITXOR   reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN_SHIFTLEFT reduce using rule 55 (expression -> expression MULTIPLY expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 55 (expression -> expression MULTIPLY expression .)
    SEMICOLON       reduce using rule 55 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 55 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 55 (expression -> expression MULTIPLY expression .)
    RBRACKET        reduce using rule 55 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 102 ]
  ! MULTIPLY        [ shift and go to state 101 ]
  ! DIVIDE          [ shift and go to state 114 ]
  ! REMAINDER       [ shift and go to state 123 ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 158

    (54) expression -> expression MINUS expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    PLUS            reduce using rule 54 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 54 (expression -> expression MINUS expression .)
    LT              reduce using rule 54 (expression -> expression MINUS expression .)
    LE              reduce using rule 54 (expression -> expression MINUS expression .)
    EQ              reduce using rule 54 (expression -> expression MINUS expression .)
    NE              reduce using rule 54 (expression -> expression MINUS expression .)
    GT              reduce using rule 54 (expression -> expression MINUS expression .)
    GE              reduce using rule 54 (expression -> expression MINUS expression .)
    LAND            reduce using rule 54 (expression -> expression MINUS expression .)
    LOR             reduce using rule 54 (expression -> expression MINUS expression .)
    BITAND          reduce using rule 54 (expression -> expression MINUS expression .)
    BITOR           reduce using rule 54 (expression -> expression MINUS expression .)
    BITXOR          reduce using rule 54 (expression -> expression MINUS expression .)
    SHIFTLEFT       reduce using rule 54 (expression -> expression MINUS expression .)
    SHIFTRIGHT      reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN          reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN_PLUS     reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN_MINUS    reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN_MULTIPLY reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN_DIVIDE   reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN_REMAINDER reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN_BITOR    reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN_BITAND   reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN_BITXOR   reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN_SHIFTLEFT reduce using rule 54 (expression -> expression MINUS expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 54 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 54 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 54 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 54 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 54 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123

  ! MULTIPLY        [ reduce using rule 54 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression MINUS expression .) ]
  ! REMAINDER       [ reduce using rule 54 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 102 ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 159

    (72) expression -> expression ASSIGN_PLUS expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .)
    RPAREN          reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .)
    COMMA           reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .)
    RBRACKET        reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! MINUS           [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! REMAINDER       [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! LT              [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! LE              [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! EQ              [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! NE              [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! GT              [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! GE              [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! LAND            [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! LOR             [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! BITAND          [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! BITOR           [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! BITXOR          [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! SHIFTLEFT       [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN          [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 72 (expression -> expression ASSIGN_PLUS expression .) ]


state 160

    (59) expression -> expression LE expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LT              reduce using rule 59 (expression -> expression LE expression .)
    LE              reduce using rule 59 (expression -> expression LE expression .)
    EQ              reduce using rule 59 (expression -> expression LE expression .)
    NE              reduce using rule 59 (expression -> expression LE expression .)
    GT              reduce using rule 59 (expression -> expression LE expression .)
    GE              reduce using rule 59 (expression -> expression LE expression .)
    LAND            reduce using rule 59 (expression -> expression LE expression .)
    LOR             reduce using rule 59 (expression -> expression LE expression .)
    BITAND          reduce using rule 59 (expression -> expression LE expression .)
    BITOR           reduce using rule 59 (expression -> expression LE expression .)
    BITXOR          reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN          reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN_PLUS     reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN_MINUS    reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN_MULTIPLY reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN_DIVIDE   reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN_REMAINDER reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN_BITOR    reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN_BITAND   reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN_BITXOR   reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN_SHIFTLEFT reduce using rule 59 (expression -> expression LE expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 59 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 59 (expression -> expression LE expression .)
    RPAREN          reduce using rule 59 (expression -> expression LE expression .)
    COMMA           reduce using rule 59 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 59 (expression -> expression LE expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 59 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression LE expression .) ]
  ! MULTIPLY        [ reduce using rule 59 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression LE expression .) ]
  ! REMAINDER       [ reduce using rule 59 (expression -> expression LE expression .) ]
  ! SHIFTLEFT       [ reduce using rule 59 (expression -> expression LE expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 59 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 161

    (61) expression -> expression NE expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    EQ              reduce using rule 61 (expression -> expression NE expression .)
    NE              reduce using rule 61 (expression -> expression NE expression .)
    LAND            reduce using rule 61 (expression -> expression NE expression .)
    LOR             reduce using rule 61 (expression -> expression NE expression .)
    BITAND          reduce using rule 61 (expression -> expression NE expression .)
    BITOR           reduce using rule 61 (expression -> expression NE expression .)
    BITXOR          reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN          reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN_PLUS     reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN_MINUS    reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN_MULTIPLY reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN_DIVIDE   reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN_REMAINDER reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN_BITOR    reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN_BITAND   reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN_BITXOR   reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN_SHIFTLEFT reduce using rule 61 (expression -> expression NE expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 61 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 61 (expression -> expression NE expression .)
    RPAREN          reduce using rule 61 (expression -> expression NE expression .)
    COMMA           reduce using rule 61 (expression -> expression NE expression .)
    RBRACKET        reduce using rule 61 (expression -> expression NE expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    GT              shift and go to state 113
    GE              shift and go to state 122
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! MULTIPLY        [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! REMAINDER       [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! SHIFTLEFT       [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 61 (expression -> expression NE expression .) ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 162

    (77) expression -> expression ASSIGN_BITOR expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .)
    RPAREN          reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .)
    COMMA           reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .)
    RBRACKET        reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! MINUS           [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! MULTIPLY        [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! DIVIDE          [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! REMAINDER       [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! LT              [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! LE              [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! EQ              [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! NE              [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! GT              [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! GE              [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! LAND            [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! LOR             [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! BITAND          [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! BITOR           [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! BITXOR          [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! SHIFTLEFT       [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN          [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 77 (expression -> expression ASSIGN_BITOR expression .) ]


state 163

    (58) expression -> expression LT expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LT              reduce using rule 58 (expression -> expression LT expression .)
    LE              reduce using rule 58 (expression -> expression LT expression .)
    EQ              reduce using rule 58 (expression -> expression LT expression .)
    NE              reduce using rule 58 (expression -> expression LT expression .)
    GT              reduce using rule 58 (expression -> expression LT expression .)
    GE              reduce using rule 58 (expression -> expression LT expression .)
    LAND            reduce using rule 58 (expression -> expression LT expression .)
    LOR             reduce using rule 58 (expression -> expression LT expression .)
    BITAND          reduce using rule 58 (expression -> expression LT expression .)
    BITOR           reduce using rule 58 (expression -> expression LT expression .)
    BITXOR          reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN          reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN_PLUS     reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN_MINUS    reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN_MULTIPLY reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN_DIVIDE   reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN_REMAINDER reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN_BITOR    reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN_BITAND   reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN_BITXOR   reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN_SHIFTLEFT reduce using rule 58 (expression -> expression LT expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 58 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 58 (expression -> expression LT expression .)
    RPAREN          reduce using rule 58 (expression -> expression LT expression .)
    COMMA           reduce using rule 58 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 58 (expression -> expression LT expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! MULTIPLY        [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! REMAINDER       [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! SHIFTLEFT       [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 58 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 164

    (53) expression -> expression PLUS expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    PLUS            reduce using rule 53 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 53 (expression -> expression PLUS expression .)
    LT              reduce using rule 53 (expression -> expression PLUS expression .)
    LE              reduce using rule 53 (expression -> expression PLUS expression .)
    EQ              reduce using rule 53 (expression -> expression PLUS expression .)
    NE              reduce using rule 53 (expression -> expression PLUS expression .)
    GT              reduce using rule 53 (expression -> expression PLUS expression .)
    GE              reduce using rule 53 (expression -> expression PLUS expression .)
    LAND            reduce using rule 53 (expression -> expression PLUS expression .)
    LOR             reduce using rule 53 (expression -> expression PLUS expression .)
    BITAND          reduce using rule 53 (expression -> expression PLUS expression .)
    BITOR           reduce using rule 53 (expression -> expression PLUS expression .)
    BITXOR          reduce using rule 53 (expression -> expression PLUS expression .)
    SHIFTLEFT       reduce using rule 53 (expression -> expression PLUS expression .)
    SHIFTRIGHT      reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN          reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN_PLUS     reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN_MINUS    reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN_MULTIPLY reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN_DIVIDE   reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN_REMAINDER reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN_BITOR    reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN_BITAND   reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN_BITXOR   reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN_SHIFTLEFT reduce using rule 53 (expression -> expression PLUS expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 53 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 53 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 53 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 53 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 53 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123

  ! MULTIPLY        [ reduce using rule 53 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression PLUS expression .) ]
  ! REMAINDER       [ reduce using rule 53 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 102 ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 165

    (67) expression -> expression BITOR expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LAND            reduce using rule 67 (expression -> expression BITOR expression .)
    LOR             reduce using rule 67 (expression -> expression BITOR expression .)
    BITOR           reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN          reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN_PLUS     reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN_MINUS    reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN_MULTIPLY reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN_DIVIDE   reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN_REMAINDER reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN_BITOR    reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN_BITAND   reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN_BITXOR   reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN_SHIFTLEFT reduce using rule 67 (expression -> expression BITOR expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 67 (expression -> expression BITOR expression .)
    SEMICOLON       reduce using rule 67 (expression -> expression BITOR expression .)
    RPAREN          reduce using rule 67 (expression -> expression BITOR expression .)
    COMMA           reduce using rule 67 (expression -> expression BITOR expression .)
    RBRACKET        reduce using rule 67 (expression -> expression BITOR expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    BITAND          shift and go to state 117
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! MULTIPLY        [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! DIVIDE          [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! REMAINDER       [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! LT              [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! LE              [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! EQ              [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! NE              [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! GT              [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! GE              [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! BITAND          [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! BITXOR          [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! SHIFTLEFT       [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 67 (expression -> expression BITOR expression .) ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITOR           [ shift and go to state 110 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 166

    (71) expression -> expression ASSIGN expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 71 (expression -> expression ASSIGN expression .)
    RPAREN          reduce using rule 71 (expression -> expression ASSIGN expression .)
    COMMA           reduce using rule 71 (expression -> expression ASSIGN expression .)
    RBRACKET        reduce using rule 71 (expression -> expression ASSIGN expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! MULTIPLY        [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! REMAINDER       [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! LT              [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! LE              [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! EQ              [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! NE              [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! GT              [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! GE              [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! LAND            [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! LOR             [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! BITAND          [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! BITOR           [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! BITXOR          [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! SHIFTLEFT       [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN          [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 71 (expression -> expression ASSIGN expression .) ]


state 167

    (74) expression -> expression ASSIGN_MULTIPLY expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .)
    RPAREN          reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .)
    COMMA           reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .)
    RBRACKET        reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! MULTIPLY        [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! DIVIDE          [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! REMAINDER       [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! LT              [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! LE              [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! EQ              [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! NE              [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! GT              [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! GE              [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! LAND            [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! LOR             [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! BITAND          [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! BITOR           [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! BITXOR          [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! SHIFTLEFT       [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN          [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 74 (expression -> expression ASSIGN_MULTIPLY expression .) ]


state 168

    (62) expression -> expression GT expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LT              reduce using rule 62 (expression -> expression GT expression .)
    LE              reduce using rule 62 (expression -> expression GT expression .)
    EQ              reduce using rule 62 (expression -> expression GT expression .)
    NE              reduce using rule 62 (expression -> expression GT expression .)
    GT              reduce using rule 62 (expression -> expression GT expression .)
    GE              reduce using rule 62 (expression -> expression GT expression .)
    LAND            reduce using rule 62 (expression -> expression GT expression .)
    LOR             reduce using rule 62 (expression -> expression GT expression .)
    BITAND          reduce using rule 62 (expression -> expression GT expression .)
    BITOR           reduce using rule 62 (expression -> expression GT expression .)
    BITXOR          reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN          reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN_PLUS     reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN_MINUS    reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN_MULTIPLY reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN_DIVIDE   reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN_REMAINDER reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN_BITOR    reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN_BITAND   reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN_BITXOR   reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN_SHIFTLEFT reduce using rule 62 (expression -> expression GT expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 62 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 62 (expression -> expression GT expression .)
    RPAREN          reduce using rule 62 (expression -> expression GT expression .)
    COMMA           reduce using rule 62 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 62 (expression -> expression GT expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 62 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> expression GT expression .) ]
  ! MULTIPLY        [ reduce using rule 62 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 62 (expression -> expression GT expression .) ]
  ! REMAINDER       [ reduce using rule 62 (expression -> expression GT expression .) ]
  ! SHIFTLEFT       [ reduce using rule 62 (expression -> expression GT expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 62 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 169

    (56) expression -> expression DIVIDE expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    PLUS            reduce using rule 56 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 56 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 56 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 56 (expression -> expression DIVIDE expression .)
    REMAINDER       reduce using rule 56 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 56 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 56 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 56 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 56 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 56 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 56 (expression -> expression DIVIDE expression .)
    LAND            reduce using rule 56 (expression -> expression DIVIDE expression .)
    LOR             reduce using rule 56 (expression -> expression DIVIDE expression .)
    BITAND          reduce using rule 56 (expression -> expression DIVIDE expression .)
    BITOR           reduce using rule 56 (expression -> expression DIVIDE expression .)
    BITXOR          reduce using rule 56 (expression -> expression DIVIDE expression .)
    SHIFTLEFT       reduce using rule 56 (expression -> expression DIVIDE expression .)
    SHIFTRIGHT      reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN          reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN_PLUS     reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN_MINUS    reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN_MULTIPLY reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN_DIVIDE   reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN_REMAINDER reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN_BITOR    reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN_BITAND   reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN_BITXOR   reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN_SHIFTLEFT reduce using rule 56 (expression -> expression DIVIDE expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 56 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 56 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 56 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 56 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 56 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 102 ]
  ! MULTIPLY        [ shift and go to state 101 ]
  ! DIVIDE          [ shift and go to state 114 ]
  ! REMAINDER       [ shift and go to state 123 ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 170

    (69) expression -> expression SHIFTLEFT expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LT              reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    LE              reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    EQ              reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    NE              reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    GT              reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    GE              reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    LAND            reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    LOR             reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    BITAND          reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    BITOR           reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    BITXOR          reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    SHIFTLEFT       reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    SHIFTRIGHT      reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN          reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN_PLUS     reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN_MINUS    reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN_MULTIPLY reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN_DIVIDE   reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN_REMAINDER reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN_BITOR    reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN_BITAND   reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN_BITXOR   reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN_SHIFTLEFT reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    SEMICOLON       reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    RPAREN          reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    COMMA           reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    RBRACKET        reduce using rule 69 (expression -> expression SHIFTLEFT expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123

  ! PLUS            [ reduce using rule 69 (expression -> expression SHIFTLEFT expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> expression SHIFTLEFT expression .) ]
  ! MULTIPLY        [ reduce using rule 69 (expression -> expression SHIFTLEFT expression .) ]
  ! DIVIDE          [ reduce using rule 69 (expression -> expression SHIFTLEFT expression .) ]
  ! REMAINDER       [ reduce using rule 69 (expression -> expression SHIFTLEFT expression .) ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 171

    (70) expression -> expression SHIFTRIGHT expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LT              reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    LE              reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    EQ              reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    NE              reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    GT              reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    GE              reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    LAND            reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    LOR             reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    BITAND          reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    BITOR           reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    BITXOR          reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    SHIFTLEFT       reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    SHIFTRIGHT      reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN          reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN_PLUS     reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN_MINUS    reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN_MULTIPLY reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN_DIVIDE   reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN_REMAINDER reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN_BITOR    reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN_BITAND   reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN_BITXOR   reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN_SHIFTLEFT reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    SEMICOLON       reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    RPAREN          reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    COMMA           reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    RBRACKET        reduce using rule 70 (expression -> expression SHIFTRIGHT expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123

  ! PLUS            [ reduce using rule 70 (expression -> expression SHIFTRIGHT expression .) ]
  ! MINUS           [ reduce using rule 70 (expression -> expression SHIFTRIGHT expression .) ]
  ! MULTIPLY        [ reduce using rule 70 (expression -> expression SHIFTRIGHT expression .) ]
  ! DIVIDE          [ reduce using rule 70 (expression -> expression SHIFTRIGHT expression .) ]
  ! REMAINDER       [ reduce using rule 70 (expression -> expression SHIFTRIGHT expression .) ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 172

    (66) expression -> expression BITAND expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LAND            reduce using rule 66 (expression -> expression BITAND expression .)
    LOR             reduce using rule 66 (expression -> expression BITAND expression .)
    BITAND          reduce using rule 66 (expression -> expression BITAND expression .)
    BITOR           reduce using rule 66 (expression -> expression BITAND expression .)
    BITXOR          reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN          reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN_PLUS     reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN_MINUS    reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN_MULTIPLY reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN_DIVIDE   reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN_REMAINDER reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN_BITOR    reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN_BITAND   reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN_BITXOR   reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN_SHIFTLEFT reduce using rule 66 (expression -> expression BITAND expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 66 (expression -> expression BITAND expression .)
    SEMICOLON       reduce using rule 66 (expression -> expression BITAND expression .)
    RPAREN          reduce using rule 66 (expression -> expression BITAND expression .)
    COMMA           reduce using rule 66 (expression -> expression BITAND expression .)
    RBRACKET        reduce using rule 66 (expression -> expression BITAND expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! MULTIPLY        [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! REMAINDER       [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! LT              [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! LE              [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! EQ              [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! NE              [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! GT              [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! GE              [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! SHIFTLEFT       [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 66 (expression -> expression BITAND expression .) ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 173

    (64) expression -> expression LAND expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LAND            reduce using rule 64 (expression -> expression LAND expression .)
    LOR             reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN          reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN_PLUS     reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN_MINUS    reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN_MULTIPLY reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN_DIVIDE   reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN_REMAINDER reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN_BITOR    reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN_BITAND   reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN_BITXOR   reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN_SHIFTLEFT reduce using rule 64 (expression -> expression LAND expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 64 (expression -> expression LAND expression .)
    SEMICOLON       reduce using rule 64 (expression -> expression LAND expression .)
    RPAREN          reduce using rule 64 (expression -> expression LAND expression .)
    COMMA           reduce using rule 64 (expression -> expression LAND expression .)
    RBRACKET        reduce using rule 64 (expression -> expression LAND expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! MULTIPLY        [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! DIVIDE          [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! REMAINDER       [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! LT              [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! LE              [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! EQ              [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! NE              [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! GT              [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! GE              [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! BITAND          [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! BITOR           [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! BITXOR          [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! SHIFTLEFT       [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 64 (expression -> expression LAND expression .) ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 174

    (80) expression -> expression ASSIGN_SHIFTLEFT expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .)
    RPAREN          reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .)
    COMMA           reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .)
    RBRACKET        reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! MINUS           [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! MULTIPLY        [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! DIVIDE          [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! REMAINDER       [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! LT              [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! LE              [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! EQ              [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! NE              [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! GT              [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! GE              [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! LAND            [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! LOR             [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! BITAND          [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! BITOR           [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! BITXOR          [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! SHIFTLEFT       [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN          [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 80 (expression -> expression ASSIGN_SHIFTLEFT expression .) ]


state 175

    (60) expression -> expression EQ expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    EQ              reduce using rule 60 (expression -> expression EQ expression .)
    NE              reduce using rule 60 (expression -> expression EQ expression .)
    LAND            reduce using rule 60 (expression -> expression EQ expression .)
    LOR             reduce using rule 60 (expression -> expression EQ expression .)
    BITAND          reduce using rule 60 (expression -> expression EQ expression .)
    BITOR           reduce using rule 60 (expression -> expression EQ expression .)
    BITXOR          reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN          reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN_PLUS     reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN_MINUS    reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN_MULTIPLY reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN_DIVIDE   reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN_REMAINDER reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN_BITOR    reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN_BITAND   reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN_BITXOR   reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN_SHIFTLEFT reduce using rule 60 (expression -> expression EQ expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 60 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 60 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 60 (expression -> expression EQ expression .)
    COMMA           reduce using rule 60 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 60 (expression -> expression EQ expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    GT              shift and go to state 113
    GE              shift and go to state 122
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! REMAINDER       [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! SHIFTLEFT       [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 60 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 176

    (76) expression -> expression ASSIGN_REMAINDER expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .)
    RPAREN          reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .)
    COMMA           reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .)
    RBRACKET        reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! MINUS           [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! MULTIPLY        [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! DIVIDE          [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! REMAINDER       [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! LT              [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! LE              [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! EQ              [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! NE              [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! GT              [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! GE              [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! LAND            [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! LOR             [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! BITAND          [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! BITOR           [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! BITXOR          [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! SHIFTLEFT       [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN          [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 76 (expression -> expression ASSIGN_REMAINDER expression .) ]


state 177

    (63) expression -> expression GE expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    LT              reduce using rule 63 (expression -> expression GE expression .)
    LE              reduce using rule 63 (expression -> expression GE expression .)
    EQ              reduce using rule 63 (expression -> expression GE expression .)
    NE              reduce using rule 63 (expression -> expression GE expression .)
    GT              reduce using rule 63 (expression -> expression GE expression .)
    GE              reduce using rule 63 (expression -> expression GE expression .)
    LAND            reduce using rule 63 (expression -> expression GE expression .)
    LOR             reduce using rule 63 (expression -> expression GE expression .)
    BITAND          reduce using rule 63 (expression -> expression GE expression .)
    BITOR           reduce using rule 63 (expression -> expression GE expression .)
    BITXOR          reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN          reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN_PLUS     reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN_MINUS    reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN_MULTIPLY reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN_DIVIDE   reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN_REMAINDER reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN_BITOR    reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN_BITAND   reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN_BITXOR   reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN_SHIFTLEFT reduce using rule 63 (expression -> expression GE expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 63 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 63 (expression -> expression GE expression .)
    RPAREN          reduce using rule 63 (expression -> expression GE expression .)
    COMMA           reduce using rule 63 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 63 (expression -> expression GE expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116

  ! PLUS            [ reduce using rule 63 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> expression GE expression .) ]
  ! MULTIPLY        [ reduce using rule 63 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 63 (expression -> expression GE expression .) ]
  ! REMAINDER       [ reduce using rule 63 (expression -> expression GE expression .) ]
  ! SHIFTLEFT       [ reduce using rule 63 (expression -> expression GE expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 63 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 178

    (57) expression -> expression REMAINDER expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    PLUS            reduce using rule 57 (expression -> expression REMAINDER expression .)
    MINUS           reduce using rule 57 (expression -> expression REMAINDER expression .)
    MULTIPLY        reduce using rule 57 (expression -> expression REMAINDER expression .)
    DIVIDE          reduce using rule 57 (expression -> expression REMAINDER expression .)
    REMAINDER       reduce using rule 57 (expression -> expression REMAINDER expression .)
    LT              reduce using rule 57 (expression -> expression REMAINDER expression .)
    LE              reduce using rule 57 (expression -> expression REMAINDER expression .)
    EQ              reduce using rule 57 (expression -> expression REMAINDER expression .)
    NE              reduce using rule 57 (expression -> expression REMAINDER expression .)
    GT              reduce using rule 57 (expression -> expression REMAINDER expression .)
    GE              reduce using rule 57 (expression -> expression REMAINDER expression .)
    LAND            reduce using rule 57 (expression -> expression REMAINDER expression .)
    LOR             reduce using rule 57 (expression -> expression REMAINDER expression .)
    BITAND          reduce using rule 57 (expression -> expression REMAINDER expression .)
    BITOR           reduce using rule 57 (expression -> expression REMAINDER expression .)
    BITXOR          reduce using rule 57 (expression -> expression REMAINDER expression .)
    SHIFTLEFT       reduce using rule 57 (expression -> expression REMAINDER expression .)
    SHIFTRIGHT      reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN          reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN_PLUS     reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN_MINUS    reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN_MULTIPLY reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN_DIVIDE   reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN_REMAINDER reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN_BITOR    reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN_BITAND   reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN_BITXOR   reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN_SHIFTLEFT reduce using rule 57 (expression -> expression REMAINDER expression .)
    ASSIGN_SHIFTRIGHT reduce using rule 57 (expression -> expression REMAINDER expression .)
    SEMICOLON       reduce using rule 57 (expression -> expression REMAINDER expression .)
    RPAREN          reduce using rule 57 (expression -> expression REMAINDER expression .)
    COMMA           reduce using rule 57 (expression -> expression REMAINDER expression .)
    RBRACKET        reduce using rule 57 (expression -> expression REMAINDER expression .)

  ! PLUS            [ shift and go to state 109 ]
  ! MINUS           [ shift and go to state 102 ]
  ! MULTIPLY        [ shift and go to state 101 ]
  ! DIVIDE          [ shift and go to state 114 ]
  ! REMAINDER       [ shift and go to state 123 ]
  ! LT              [ shift and go to state 108 ]
  ! LE              [ shift and go to state 104 ]
  ! EQ              [ shift and go to state 120 ]
  ! NE              [ shift and go to state 106 ]
  ! GT              [ shift and go to state 113 ]
  ! GE              [ shift and go to state 122 ]
  ! LAND            [ shift and go to state 118 ]
  ! LOR             [ shift and go to state 98 ]
  ! BITAND          [ shift and go to state 117 ]
  ! BITOR           [ shift and go to state 110 ]
  ! BITXOR          [ shift and go to state 100 ]
  ! SHIFTLEFT       [ shift and go to state 115 ]
  ! SHIFTRIGHT      [ shift and go to state 116 ]
  ! ASSIGN          [ shift and go to state 111 ]
  ! ASSIGN_PLUS     [ shift and go to state 103 ]
  ! ASSIGN_MINUS    [ shift and go to state 97 ]
  ! ASSIGN_MULTIPLY [ shift and go to state 112 ]
  ! ASSIGN_DIVIDE   [ shift and go to state 95 ]
  ! ASSIGN_REMAINDER [ shift and go to state 121 ]
  ! ASSIGN_BITOR    [ shift and go to state 107 ]
  ! ASSIGN_BITAND   [ shift and go to state 124 ]
  ! ASSIGN_BITXOR   [ shift and go to state 96 ]
  ! ASSIGN_SHIFTLEFT [ shift and go to state 119 ]
  ! ASSIGN_SHIFTRIGHT [ shift and go to state 99 ]


state 179

    (78) expression -> expression ASSIGN_BITAND expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .)
    RPAREN          reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .)
    COMMA           reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .)
    RBRACKET        reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99

  ! PLUS            [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! MINUS           [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! MULTIPLY        [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! DIVIDE          [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! REMAINDER       [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! LT              [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! LE              [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! EQ              [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! NE              [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! GT              [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! GE              [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! LAND            [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! LOR             [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! BITAND          [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! BITOR           [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! BITXOR          [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! SHIFTLEFT       [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! SHIFTRIGHT      [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN          [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN_PLUS     [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN_MINUS    [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN_MULTIPLY [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN_DIVIDE   [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN_REMAINDER [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN_BITOR    [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN_BITAND   [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN_BITXOR   [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN_SHIFTLEFT [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]
  ! ASSIGN_SHIFTRIGHT [ reduce using rule 78 (expression -> expression ASSIGN_BITAND expression .) ]


state 180

    (37) variables_names -> variables_names COMMA . variable_name
    (38) variable_name -> . IDENTIFIER
    (39) variable_name -> . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 127

    variable_name                  shift and go to state 196

state 181

    (35) variables_declaration -> type_expr variables_names SEMICOLON .

    RCBRACKET       reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    SEMICOLON       reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    LCBRACKET       reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    IF              reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    WHILE           reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    DO              reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    BREAK           reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    CONTINUE        reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    DISCARD         reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    RETURN          reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    PLUS            reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    MINUS           reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    LNOT            reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    BITNOT          reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    TYPE            reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    IDENTIFIER      reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    LPAREN          reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    INTEGER         reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    TRUE            reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    FALSE           reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    REAL            reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    STRING          reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)
    ELSE            reduce using rule 35 (variables_declaration -> type_expr variables_names SEMICOLON .)


state 182

    (39) variable_name -> IDENTIFIER ASSIGN . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 197
    call_expression                shift and go to state 70

state 183

    (114) struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 198


state 184

    (117) struct_field -> optional_attribute_list . type IDENTIFIER SEMICOLON
    (119) optional_attribute_list -> optional_attribute_list . attribute
    (112) type -> . TYPE
    (120) attribute -> . LBRACKET IDENTIFIER attribute_arguments RBRACKET

    TYPE            shift and go to state 17
    LBRACKET        shift and go to state 15

    attribute                      shift and go to state 14
    type                           shift and go to state 199

state 185

    (115) struct_fields -> struct_fields struct_field .

    RCBRACKET       reduce using rule 115 (struct_fields -> struct_fields struct_field .)
    TYPE            reduce using rule 115 (struct_fields -> struct_fields struct_field .)
    LBRACKET        reduce using rule 115 (struct_fields -> struct_fields struct_field .)


state 186

    (122) attribute_arguments -> LPAREN call_arguments RPAREN .

    RBRACKET        reduce using rule 122 (attribute_arguments -> LPAREN call_arguments RPAREN .)


state 187

    (100) call_arguments_nonempty -> call_arguments_nonempty COMMA . expression
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    string_literal                 shift and go to state 35
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    real_constant                  shift and go to state 65
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 200
    call_expression                shift and go to state 70

state 188

    (13) prototype_arguments_nonempty -> prototype_arguments_nonempty COMMA . prototype_argument
    (14) prototype_argument -> . argument_pass_type type_expr IDENTIFIER
    (15) argument_pass_type -> .
    (16) argument_pass_type -> . IN
    (17) argument_pass_type -> . OUT
    (18) argument_pass_type -> . INOUT

    TYPE            reduce using rule 15 (argument_pass_type -> .)
    IDENTIFIER      reduce using rule 15 (argument_pass_type -> .)
    IN              shift and go to state 135
    OUT             shift and go to state 141
    INOUT           shift and go to state 140

    prototype_argument             shift and go to state 201
    argument_pass_type             shift and go to state 137

state 189

    (19) function_prototype -> function_kind type_expr IDENTIFIER LPAREN prototype_arguments RPAREN .

    SEMICOLON       reduce using rule 19 (function_prototype -> function_kind type_expr IDENTIFIER LPAREN prototype_arguments RPAREN .)
    LCBRACKET       reduce using rule 19 (function_prototype -> function_kind type_expr IDENTIFIER LPAREN prototype_arguments RPAREN .)


state 190

    (14) prototype_argument -> argument_pass_type type_expr . IDENTIFIER

    IDENTIFIER      shift and go to state 202


state 191

    (45) do_while_statement -> DO statement WHILE LPAREN . expression RPAREN
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (113) identifier -> . IDENTIFIER
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    boolean_constant               shift and go to state 47
    constant                       shift and go to state 49
    real_constant                  shift and go to state 65
    subscript_access               shift and go to state 60
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    primary_expression             shift and go to state 53
    integer_constant               shift and go to state 31
    identifier                     shift and go to state 79
    expression                     shift and go to state 203
    call_expression                shift and go to state 70
    string_literal                 shift and go to state 35

state 192

    (44) while_statement -> WHILE LPAREN expression RPAREN . statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . if_statement
    (27) statement -> . while_statement
    (28) statement -> . do_while_statement
    (29) statement -> . break_statement
    (30) statement -> . continue_statement
    (31) statement -> . discard_statement
    (32) statement -> . return_statement
    (33) statement -> . variables_declaration
    (34) statement -> . expression_statement
    (40) null_statement -> . SEMICOLON
    (41) block_statement -> . LCBRACKET statement_list RCBRACKET
    (42) if_statement -> . IF LPAREN expression RPAREN statement
    (43) if_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (44) while_statement -> . WHILE LPAREN expression RPAREN statement
    (45) do_while_statement -> . DO statement WHILE LPAREN expression RPAREN
    (46) break_statement -> . BREAK SEMICOLON
    (47) continue_statement -> . CONTINUE SEMICOLON
    (48) discard_statement -> . DISCARD SEMICOLON
    (49) return_statement -> . RETURN SEMICOLON
    (50) return_statement -> . RETURN expression SEMICOLON
    (35) variables_declaration -> . type_expr variables_names SEMICOLON
    (51) expression_statement -> . expression SEMICOLON
    (110) type_expr -> . type
    (111) type_expr -> . identifier
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (112) type -> . TYPE
    (113) identifier -> . IDENTIFIER
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    SEMICOLON       shift and go to state 39
    LCBRACKET       shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 33
    DO              shift and go to state 28
    BREAK           shift and go to state 61
    CONTINUE        shift and go to state 63
    DISCARD         shift and go to state 34
    RETURN          shift and go to state 30
    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    TYPE            shift and go to state 17
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    expression_statement           shift and go to state 27
    constant                       shift and go to state 49
    integer_constant               shift and go to state 31
    break_statement                shift and go to state 32
    string_literal                 shift and go to state 35
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    block_statement                shift and go to state 41
    return_statement               shift and go to state 42
    while_statement                shift and go to state 43
    continue_statement             shift and go to state 44
    statement                      shift and go to state 204
    boolean_constant               shift and go to state 47
    if_statement                   shift and go to state 50
    type                           shift and go to state 20
    do_while_statement             shift and go to state 52
    variables_declaration          shift and go to state 58
    primary_expression             shift and go to state 53
    identifier                     shift and go to state 51
    subscript_access               shift and go to state 60
    type_expr                      shift and go to state 71
    real_constant                  shift and go to state 65
    null_statement                 shift and go to state 67
    expression                     shift and go to state 68
    discard_statement              shift and go to state 69
    call_expression                shift and go to state 70

state 193

    (94) subscript_access -> primary_expression LBRACKET expression RBRACKET .

    DOT             reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    REMAINDER       reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    NE              reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    GE              reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    LAND            reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    LOR             reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    BITAND          reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    BITOR           reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    BITXOR          reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    SHIFTLEFT       reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    SHIFTRIGHT      reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN_PLUS     reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN_MINUS    reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN_MULTIPLY reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN_DIVIDE   reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN_REMAINDER reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN_BITOR    reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN_BITAND   reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN_BITXOR   reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN_SHIFTLEFT reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    ASSIGN_SHIFTRIGHT reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 94 (subscript_access -> primary_expression LBRACKET expression RBRACKET .)


state 194

    (95) call_expression -> primary_expression LPAREN call_arguments RPAREN .

    DOT             reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    LBRACKET        reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    LPAREN          reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    PLUS            reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    MINUS           reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    MULTIPLY        reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    DIVIDE          reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    REMAINDER       reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    LT              reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    LE              reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    EQ              reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    NE              reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    GT              reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    GE              reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    LAND            reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    LOR             reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    BITAND          reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    BITOR           reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    BITXOR          reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    SHIFTLEFT       reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    SHIFTRIGHT      reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN          reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN_PLUS     reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN_MINUS    reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN_MULTIPLY reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN_DIVIDE   reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN_REMAINDER reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN_BITOR    reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN_BITAND   reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN_BITXOR   reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN_SHIFTLEFT reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    ASSIGN_SHIFTRIGHT reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    SEMICOLON       reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    RPAREN          reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    COMMA           reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)
    RBRACKET        reduce using rule 95 (call_expression -> primary_expression LPAREN call_arguments RPAREN .)


state 195

    (42) if_statement -> IF LPAREN expression RPAREN . statement
    (43) if_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . if_statement
    (27) statement -> . while_statement
    (28) statement -> . do_while_statement
    (29) statement -> . break_statement
    (30) statement -> . continue_statement
    (31) statement -> . discard_statement
    (32) statement -> . return_statement
    (33) statement -> . variables_declaration
    (34) statement -> . expression_statement
    (40) null_statement -> . SEMICOLON
    (41) block_statement -> . LCBRACKET statement_list RCBRACKET
    (42) if_statement -> . IF LPAREN expression RPAREN statement
    (43) if_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (44) while_statement -> . WHILE LPAREN expression RPAREN statement
    (45) do_while_statement -> . DO statement WHILE LPAREN expression RPAREN
    (46) break_statement -> . BREAK SEMICOLON
    (47) continue_statement -> . CONTINUE SEMICOLON
    (48) discard_statement -> . DISCARD SEMICOLON
    (49) return_statement -> . RETURN SEMICOLON
    (50) return_statement -> . RETURN expression SEMICOLON
    (35) variables_declaration -> . type_expr variables_names SEMICOLON
    (51) expression_statement -> . expression SEMICOLON
    (110) type_expr -> . type
    (111) type_expr -> . identifier
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (112) type -> . TYPE
    (113) identifier -> . IDENTIFIER
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    SEMICOLON       shift and go to state 39
    LCBRACKET       shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 33
    DO              shift and go to state 28
    BREAK           shift and go to state 61
    CONTINUE        shift and go to state 63
    DISCARD         shift and go to state 34
    RETURN          shift and go to state 30
    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    TYPE            shift and go to state 17
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    expression_statement           shift and go to state 27
    constant                       shift and go to state 49
    integer_constant               shift and go to state 31
    break_statement                shift and go to state 32
    string_literal                 shift and go to state 35
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    block_statement                shift and go to state 41
    return_statement               shift and go to state 42
    while_statement                shift and go to state 43
    continue_statement             shift and go to state 44
    statement                      shift and go to state 205
    boolean_constant               shift and go to state 47
    if_statement                   shift and go to state 50
    type                           shift and go to state 20
    do_while_statement             shift and go to state 52
    variables_declaration          shift and go to state 58
    primary_expression             shift and go to state 53
    identifier                     shift and go to state 51
    subscript_access               shift and go to state 60
    type_expr                      shift and go to state 71
    real_constant                  shift and go to state 65
    null_statement                 shift and go to state 67
    expression                     shift and go to state 68
    discard_statement              shift and go to state 69
    call_expression                shift and go to state 70

state 196

    (37) variables_names -> variables_names COMMA variable_name .

    SEMICOLON       reduce using rule 37 (variables_names -> variables_names COMMA variable_name .)
    COMMA           reduce using rule 37 (variables_names -> variables_names COMMA variable_name .)


state 197

    (39) variable_name -> IDENTIFIER ASSIGN expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    SEMICOLON       reduce using rule 39 (variable_name -> IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 39 (variable_name -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99


state 198

    (114) struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON .

    KERNEL          reduce using rule 114 (struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON .)
    STRUCT          reduce using rule 114 (struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 114 (struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON .)
    TYPE            reduce using rule 114 (struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 114 (struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON .)
    $end            reduce using rule 114 (struct_definition -> optional_attribute_list STRUCT IDENTIFIER LCBRACKET struct_fields RCBRACKET SEMICOLON .)


state 199

    (117) struct_field -> optional_attribute_list type . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 206


state 200

    (100) call_arguments_nonempty -> call_arguments_nonempty COMMA expression .
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    COMMA           reduce using rule 100 (call_arguments_nonempty -> call_arguments_nonempty COMMA expression .)
    RPAREN          reduce using rule 100 (call_arguments_nonempty -> call_arguments_nonempty COMMA expression .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99


state 201

    (13) prototype_arguments_nonempty -> prototype_arguments_nonempty COMMA prototype_argument .

    COMMA           reduce using rule 13 (prototype_arguments_nonempty -> prototype_arguments_nonempty COMMA prototype_argument .)
    RPAREN          reduce using rule 13 (prototype_arguments_nonempty -> prototype_arguments_nonempty COMMA prototype_argument .)


state 202

    (14) prototype_argument -> argument_pass_type type_expr IDENTIFIER .

    COMMA           reduce using rule 14 (prototype_argument -> argument_pass_type type_expr IDENTIFIER .)
    RPAREN          reduce using rule 14 (prototype_argument -> argument_pass_type type_expr IDENTIFIER .)


state 203

    (45) do_while_statement -> DO statement WHILE LPAREN expression . RPAREN
    (53) expression -> expression . PLUS expression
    (54) expression -> expression . MINUS expression
    (55) expression -> expression . MULTIPLY expression
    (56) expression -> expression . DIVIDE expression
    (57) expression -> expression . REMAINDER expression
    (58) expression -> expression . LT expression
    (59) expression -> expression . LE expression
    (60) expression -> expression . EQ expression
    (61) expression -> expression . NE expression
    (62) expression -> expression . GT expression
    (63) expression -> expression . GE expression
    (64) expression -> expression . LAND expression
    (65) expression -> expression . LOR expression
    (66) expression -> expression . BITAND expression
    (67) expression -> expression . BITOR expression
    (68) expression -> expression . BITXOR expression
    (69) expression -> expression . SHIFTLEFT expression
    (70) expression -> expression . SHIFTRIGHT expression
    (71) expression -> expression . ASSIGN expression
    (72) expression -> expression . ASSIGN_PLUS expression
    (73) expression -> expression . ASSIGN_MINUS expression
    (74) expression -> expression . ASSIGN_MULTIPLY expression
    (75) expression -> expression . ASSIGN_DIVIDE expression
    (76) expression -> expression . ASSIGN_REMAINDER expression
    (77) expression -> expression . ASSIGN_BITOR expression
    (78) expression -> expression . ASSIGN_BITAND expression
    (79) expression -> expression . ASSIGN_BITXOR expression
    (80) expression -> expression . ASSIGN_SHIFTLEFT expression
    (81) expression -> expression . ASSIGN_SHIFTRIGHT expression

    RPAREN          shift and go to state 207
    PLUS            shift and go to state 109
    MINUS           shift and go to state 102
    MULTIPLY        shift and go to state 101
    DIVIDE          shift and go to state 114
    REMAINDER       shift and go to state 123
    LT              shift and go to state 108
    LE              shift and go to state 104
    EQ              shift and go to state 120
    NE              shift and go to state 106
    GT              shift and go to state 113
    GE              shift and go to state 122
    LAND            shift and go to state 118
    LOR             shift and go to state 98
    BITAND          shift and go to state 117
    BITOR           shift and go to state 110
    BITXOR          shift and go to state 100
    SHIFTLEFT       shift and go to state 115
    SHIFTRIGHT      shift and go to state 116
    ASSIGN          shift and go to state 111
    ASSIGN_PLUS     shift and go to state 103
    ASSIGN_MINUS    shift and go to state 97
    ASSIGN_MULTIPLY shift and go to state 112
    ASSIGN_DIVIDE   shift and go to state 95
    ASSIGN_REMAINDER shift and go to state 121
    ASSIGN_BITOR    shift and go to state 107
    ASSIGN_BITAND   shift and go to state 124
    ASSIGN_BITXOR   shift and go to state 96
    ASSIGN_SHIFTLEFT shift and go to state 119
    ASSIGN_SHIFTRIGHT shift and go to state 99


state 204

    (44) while_statement -> WHILE LPAREN expression RPAREN statement .

    RCBRACKET       reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    SEMICOLON       reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    LCBRACKET       reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    CONTINUE        reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    DISCARD         reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    LNOT            reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    BITNOT          reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    TYPE            reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    INTEGER         reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    REAL            reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 44 (while_statement -> WHILE LPAREN expression RPAREN statement .)


state 205

    (42) if_statement -> IF LPAREN expression RPAREN statement .
    (43) if_statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RCBRACKET       reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    SEMICOLON       reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    LCBRACKET       reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    CONTINUE        reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    DISCARD         reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    LNOT            reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    BITNOT          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    TYPE            reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    INTEGER         reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    REAL            reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 208

  ! ELSE            [ reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN statement .) ]


state 206

    (117) struct_field -> optional_attribute_list type IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 209


state 207

    (45) do_while_statement -> DO statement WHILE LPAREN expression RPAREN .

    WHILE           reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    RCBRACKET       reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    LCBRACKET       reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    IF              reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    DO              reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    BREAK           reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    DISCARD         reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    RETURN          reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    PLUS            reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    MINUS           reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    LNOT            reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    BITNOT          reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    TYPE            reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    INTEGER         reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    TRUE            reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    FALSE           reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    REAL            reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    STRING          reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)
    ELSE            reduce using rule 45 (do_while_statement -> DO statement WHILE LPAREN expression RPAREN .)


state 208

    (43) if_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (24) statement -> . null_statement
    (25) statement -> . block_statement
    (26) statement -> . if_statement
    (27) statement -> . while_statement
    (28) statement -> . do_while_statement
    (29) statement -> . break_statement
    (30) statement -> . continue_statement
    (31) statement -> . discard_statement
    (32) statement -> . return_statement
    (33) statement -> . variables_declaration
    (34) statement -> . expression_statement
    (40) null_statement -> . SEMICOLON
    (41) block_statement -> . LCBRACKET statement_list RCBRACKET
    (42) if_statement -> . IF LPAREN expression RPAREN statement
    (43) if_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (44) while_statement -> . WHILE LPAREN expression RPAREN statement
    (45) do_while_statement -> . DO statement WHILE LPAREN expression RPAREN
    (46) break_statement -> . BREAK SEMICOLON
    (47) continue_statement -> . CONTINUE SEMICOLON
    (48) discard_statement -> . DISCARD SEMICOLON
    (49) return_statement -> . RETURN SEMICOLON
    (50) return_statement -> . RETURN expression SEMICOLON
    (35) variables_declaration -> . type_expr variables_names SEMICOLON
    (51) expression_statement -> . expression SEMICOLON
    (110) type_expr -> . type
    (111) type_expr -> . identifier
    (52) expression -> . primary_expression
    (53) expression -> . expression PLUS expression
    (54) expression -> . expression MINUS expression
    (55) expression -> . expression MULTIPLY expression
    (56) expression -> . expression DIVIDE expression
    (57) expression -> . expression REMAINDER expression
    (58) expression -> . expression LT expression
    (59) expression -> . expression LE expression
    (60) expression -> . expression EQ expression
    (61) expression -> . expression NE expression
    (62) expression -> . expression GT expression
    (63) expression -> . expression GE expression
    (64) expression -> . expression LAND expression
    (65) expression -> . expression LOR expression
    (66) expression -> . expression BITAND expression
    (67) expression -> . expression BITOR expression
    (68) expression -> . expression BITXOR expression
    (69) expression -> . expression SHIFTLEFT expression
    (70) expression -> . expression SHIFTRIGHT expression
    (71) expression -> . expression ASSIGN expression
    (72) expression -> . expression ASSIGN_PLUS expression
    (73) expression -> . expression ASSIGN_MINUS expression
    (74) expression -> . expression ASSIGN_MULTIPLY expression
    (75) expression -> . expression ASSIGN_DIVIDE expression
    (76) expression -> . expression ASSIGN_REMAINDER expression
    (77) expression -> . expression ASSIGN_BITOR expression
    (78) expression -> . expression ASSIGN_BITAND expression
    (79) expression -> . expression ASSIGN_BITXOR expression
    (80) expression -> . expression ASSIGN_SHIFTLEFT expression
    (81) expression -> . expression ASSIGN_SHIFTRIGHT expression
    (82) expression -> . PLUS expression
    (83) expression -> . MINUS expression
    (84) expression -> . LNOT expression
    (85) expression -> . BITNOT expression
    (112) type -> . TYPE
    (113) identifier -> . IDENTIFIER
    (86) primary_expression -> . constant
    (87) primary_expression -> . identifier
    (88) primary_expression -> . parenthesis_expression
    (89) primary_expression -> . member_access
    (90) primary_expression -> . subscript_access
    (91) primary_expression -> . call_expression
    (101) constant -> . integer_constant
    (102) constant -> . boolean_constant
    (103) constant -> . real_constant
    (104) constant -> . string_literal
    (92) parenthesis_expression -> . LPAREN expression RPAREN
    (93) member_access -> . primary_expression DOT IDENTIFIER
    (94) subscript_access -> . primary_expression LBRACKET expression RBRACKET
    (95) call_expression -> . primary_expression LPAREN call_arguments RPAREN
    (105) integer_constant -> . INTEGER
    (106) boolean_constant -> . TRUE
    (107) boolean_constant -> . FALSE
    (108) real_constant -> . REAL
    (109) string_literal -> . STRING

    SEMICOLON       shift and go to state 39
    LCBRACKET       shift and go to state 55
    IF              shift and go to state 57
    WHILE           shift and go to state 33
    DO              shift and go to state 28
    BREAK           shift and go to state 61
    CONTINUE        shift and go to state 63
    DISCARD         shift and go to state 34
    RETURN          shift and go to state 30
    PLUS            shift and go to state 45
    MINUS           shift and go to state 37
    LNOT            shift and go to state 29
    BITNOT          shift and go to state 62
    TYPE            shift and go to state 17
    IDENTIFIER      shift and go to state 19
    LPAREN          shift and go to state 54
    INTEGER         shift and go to state 48
    TRUE            shift and go to state 36
    FALSE           shift and go to state 59
    REAL            shift and go to state 64
    STRING          shift and go to state 66

    expression_statement           shift and go to state 27
    constant                       shift and go to state 49
    integer_constant               shift and go to state 31
    break_statement                shift and go to state 32
    string_literal                 shift and go to state 35
    member_access                  shift and go to state 40
    parenthesis_expression         shift and go to state 56
    block_statement                shift and go to state 41
    return_statement               shift and go to state 42
    while_statement                shift and go to state 43
    continue_statement             shift and go to state 44
    statement                      shift and go to state 210
    boolean_constant               shift and go to state 47
    if_statement                   shift and go to state 50
    type                           shift and go to state 20
    do_while_statement             shift and go to state 52
    variables_declaration          shift and go to state 58
    primary_expression             shift and go to state 53
    identifier                     shift and go to state 51
    subscript_access               shift and go to state 60
    type_expr                      shift and go to state 71
    real_constant                  shift and go to state 65
    null_statement                 shift and go to state 67
    expression                     shift and go to state 68
    discard_statement              shift and go to state 69
    call_expression                shift and go to state 70

state 209

    (117) struct_field -> optional_attribute_list type IDENTIFIER SEMICOLON .

    RCBRACKET       reduce using rule 117 (struct_field -> optional_attribute_list type IDENTIFIER SEMICOLON .)
    TYPE            reduce using rule 117 (struct_field -> optional_attribute_list type IDENTIFIER SEMICOLON .)
    LBRACKET        reduce using rule 117 (struct_field -> optional_attribute_list type IDENTIFIER SEMICOLON .)


state 210

    (43) if_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RCBRACKET       reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SEMICOLON       reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LCBRACKET       reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DO              reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    BREAK           reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONTINUE        reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DISCARD         reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUS            reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUS           reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LNOT            reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    BITNOT          reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    TYPE            reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INTEGER         reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    TRUE            reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FALSE           reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    REAL            reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN statement ELSE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 205 resolved as shift
